{"version":3,"sources":["component/logEditor/index.module.css","component/logComments/index.module.css","component/appFrame/index.js","util/getUrlUtil.js","component/normalNavigator/index.js","store/index.js","service/log.js","service/textToIdMap.js","util/toaster.js","util/commonUtil.js","page/alia.js","component/markdownPreview/index.js","component/logItem/index.js","page/log.js","component/markdownEditor/index.js","component/logCommentEditor/index.js","service/logComment.js","page/logCommentCreate.js","component/logEditor/index.js","page/logCreate.js","component/timeAgo/index.js","component/logComments/index.js","util/sourcePosUtil.js","component/drawerEditor/index.js","page/logDetail.js","App.js","serviceWorker.js","index.js","page/logDetail.module.css","component/appFrame/index.module.css","component/markdownPreview/index.module.css","component/logItem/index.module.css","component/markdownEditor/index.module.css","page/alia.module.css","page/log.module.css","page/logCommentCreate.module.css","component/logCommentEditor/index.module.css","page/logCreate.module.css"],"names":["module","exports","props","className","styles","container","header","body","children","footer","id","text","NormalNavigator","showBack","title","actions","leftActions","h","useHistory","Classes","DARK","style","userSelect","maxWidth","margin","align","onClick","goBack","icon","minimal","push","getUrlUtil","db","Dexie","version","stores","logs","logComments","textToIdMap","store","get","Number","logInfo","add","time","Date","delete","update","orderBy","toArray","then","l","reverse","where","first","match","catch","lid","item","AppToaster","Toaster","create","position","Position","TOP","noop","delay","ms","Promise","resolve","setTimeout","createAndLink","a","success","t","logService","content","textToIdMapService","show","timeout","message","intent","createAndUpdateLink","Alia","params","useParams","isValidText","useState","isTextExist","setIsTextExist","isTextExistInit","setIsTextExistInit","isLogExist","setIsLogExist","isLogExistInit","setIsLogExistInit","isInit","useEffect","map","log","replace","validate","large","description","action","extra","MarkdownPreview","source","rsource","selectAble","m","p1","p2","generatLinks","sepIdx","indexOf","slice","names","markdownBody","active","evt","onSelect","preventDefault","el","findTopLevelEle","target","HTMLElement","parentNode","classList","contains","pnode","parentElement","sourcePosStr","getAttribute","short","sourcePos","meta","TEXT_MUTED","TEXT_SMALL","datetime","date","locale","elevation","Elevation","ONE","interactive","Log","setlogs","list","fetch","key","value","onChange","onSubmit","placeholder","inputRef","setInputRef","rSelection","selection","JSON","parse","setSelectionRange","from","to","setAttribute","editorBox","ref","fill","autoFocus","growVertically","onKeyUp","keyCode","altKey","width","maxHeight","resize","onKeyDown","start","selectionStart","end","selectionEnd","linesBegin","substring","lastIndexOf","selected","window","getSelection","toString","expandSelected","shiftKey","stringify","test","length","LogCommentEditor","onConfirm","val","logCommentInfo","LogCommentCreate","cid","initState","setInitState","isNew","setIsNew","setValue","logCommentService","finally","err","alert","LogEditor","LogCreate","showTooltip","disabled","dayjs","format","LogComment","c","comment","onRequestDelete","onRequestUpdate","commentMeta","commentMetaBlock","commentMetaItem","hoverVisible","interactionKind","commentContent","RUNNING_TEXT","LogComments","comments","REG","getRange","sourceArr","split","exec","startLine","startIndex","endLine","endIndex","sourcePosParse","reduce","p","n","DrawerEditor","isOpen","onClose","hasBackdrop","BOTTOM","size","DRAWER_BODY","backgroundColor","height","padding","display","alignItems","DIALOG_CLOSE_BUTTON","NavigationActions","onAppendRequest","showActionsBar","shortcuts","highlightCurrentDay","label","Divider","confirm","LogDetail","flag","setFlag","logData","setLogData","logCommentsData","setLogCommentsData","partialEdit","setPartialEdit","isOpenPartialDrawerEditor","setIsOpenPartialDrawerEditor","isOpenAppendDrawerEditor","setIsOpenAppendDrawerEditor","isOpenCommentDrawerEditor","setIsOpenCommentDrawerEditor","partialSource","setPartialSource","appendSource","setAppendSource","commentSource","setCommentSource","commentRefId","setCommentRefId","posData","setPosData","logCommentsInfo","fetchData","marginLeft","marginBottom","checked","logContentBox","logContent","pos","partial","range","sliceCodeFromSource","commentBox","replacement","replaceCodeFromSource","App","path","component","LogPage","LogDetailPage","AliaPage","LogCreatePage","LogCommentCreatePage","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.993a1bb2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"logEditor_textarea__28vya\",\"container\":\"logEditor_container__1GeHV\",\"buttonWrap\":\"logEditor_buttonWrap__1W5No\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"logComments_comments__1LjH6\",\"comment\":\"logComments_comment__GP3sS\",\"commentTime\":\"logComments_commentTime__3ccqY\",\"commentMeta\":\"logComments_commentMeta__2p6gN\",\"commentMetaItem\":\"logComments_commentMetaItem__2-ZM7\"};","import React from 'react';\nimport styles from './index.module.css';\n\nexport default function(props) {\n    return (\n        <div className={styles.container}>\n            { props.header && <div className={styles.header}>{props.header}</div> }\n            <div className={styles.body}>{props.children}</div>\n            { props.footer && <div className={styles.footer}>{props.footer}</div> }\n        </div>\n    );\n}","\nexport default {\n    getLogUrl: () => `/l`,\n    getLogDetailUrl: (id) => `/l/d/${id}`,\n    getAliaUrl: text => `/l/a/${text}`,\n    getLogCreateUrl: (id = '') => `/l/ce/${id}`,\n    getLogCommentCreateUrl: (id, cid = '') => `/l/lc/ce/${id}/${cid}`\n}\n","\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n    Navbar, NavbarGroup, Button, NavbarHeading, NavbarDivider, ButtonGroup, Classes\n} from '@blueprintjs/core';\nimport getUrlUtil from 'util/getUrlUtil';\n\nexport default function NormalNavigator(props) {\n    const { showBack = false, title = '', actions = null, leftActions = null } = props;\n    const h = useHistory();\n    return (\n        <Navbar className={Classes.DARK} style={{ userSelect: 'none'}}>\n            <div style={{ maxWidth: 640, margin: 'auto' }}>\n                <NavbarGroup align=\"left\">\n                    <ButtonGroup>\n                        {\n                            showBack &&\n                                <Button\n                                    onClick={() => h.goBack()}\n                                    icon=\"chevron-left\"\n                                    minimal\n                                >返回</Button>\n                        }\n                        <Button minimal icon=\"home\" onClick={() => h.push(getUrlUtil.getLogUrl())}></Button>\n                    </ButtonGroup>\n                    {\n                        leftActions && <>\n                            <NavbarDivider />\n                            {leftActions}\n                        </>\n                    }\n                    {\n                        title !== '' && <>\n                            <NavbarDivider />\n                            <NavbarHeading>{title}</NavbarHeading>\n                        </>\n                    }\n                </NavbarGroup>\n                <NavbarGroup align=\"right\">\n                    {actions}\n                </NavbarGroup>\n            </div>\n        </Navbar>\n    );\n}","import Dexie from 'dexie';\n\nconst db = new Dexie('EfficientDatabase');\n\ndb.version(1).stores({\n    logs: '++id, content, time'\n});\n\ndb.version(2).stores({\n    logComments: '++id, content, time, lid'\n});\n\ndb.version(3).stores({\n    textToIdMap: '++id, &text, lid'\n});\n\nexport default db;\n\n// import SyncClient from 'sync-client';\n// // SyncClient is a subclass of Dexie\n\n// const databaseName = 'testDB'; // The name for the indexedDB database\n// const versions = [\n//     {\n//         version: 1,\n//         stores: {\n//           logs: '++id, content, time'\n//         }\n//     }, {\n//         version: 2,\n//         stores: {\n//             logComments: '++id, content, time, lid'\n//         }\n//     }, {\n//         version: 3,\n//         stores: {\n//             textToIdMap: '++id, &text, lid'\n//         }\n//     }\n// ];\n\n// const syncClient = new SyncClient(databaseName, versions, {\n\n// });\n\n// export default syncClient;\n// window.syncClient = syncClient;\n\n// syncClient.syncable.connect('sync_client_protocol', 'http://127.0.0.1:3000');\n// syncClient.syncable.on('statusChanged', function (newStatus, url) {\n//     console.log (\"Sync Status changed: \" + newStatus, url);\n// });","import store from 'store/index';\n\nconst get = (id) => store.logs.get(Number(id));\n\nconst add = (logInfo) => store.logs.add({...logInfo, time: new Date()});\n\nconst del = (id) => store.logs.delete(Number(id));\n\nconst upd = (id, logInfo) => store.logs.update(Number(id), logInfo);\n\nconst all = () => store.logs.orderBy('time').toArray().then(l => l.reverse());\n\nexport default {\n    get, add, del, upd, all\n}","import store from 'store/index';\n\nconst findMapByText = text => store\n    .textToIdMap\n    .where({text})\n    .first(match => match)\n    .catch(() => null);\n\nconst link = (text, lid) => store.textToIdMap.add({ text, lid });\nconst relink = (text, lid) => store.textToIdMap.where({ text }).first(item => store.textToIdMap.update(item.id, { lid }));\n\nexport default {\n    findMapByText,\n    link,\n    relink\n};","import { Position, Toaster } from \"@blueprintjs/core\";\n \n\nexport const AppToaster = Toaster.create({\n    className: \"recipe-toaster\",\n    position: Position.TOP\n});","\nexport const noop = () => false;\n\nexport const delay = ms => new Promise(resolve => {\n    setTimeout(resolve, ms);\n});","\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport AppFrame from 'component/appFrame';\nimport NormalNavigator from 'component/normalNavigator';\nimport logService from 'service/log';\nimport textToIdMapService from 'service/textToIdMap';\nimport styles from './alia.module.css';\nimport { Button, NonIdealState, Tag, Spinner } from '@blueprintjs/core';\nimport { AppToaster } from 'util/toaster';\nimport getUrlUtil from 'util/getUrlUtil';\nimport { delay } from 'util/commonUtil';\n\nconst createAndLink = async (text) => {\n    let success = true;\n    let lid;\n    let t = '';\n    if (text === 'm') { t = '美好的一天！' }\n    try {\n        lid = await logService.add({ content: t || text + '\\n---\\n' });\n        await textToIdMapService.link(text, lid);\n    } catch(err) {\n        AppToaster.show({ timeout: 2000, message: err.message, intent: 'danger' });\n        success = false;\n    }\n    return success ? lid : null;\n}\nconst createAndUpdateLink = async (text) => {\n    let success = true;\n    let lid;\n    let t = '';\n    if (text === 'm') { t = '美好的一天！' }\n    try {\n        lid = await logService.add({ content: t || text + '\\n---\\n' });\n        await textToIdMapService.relink(text, lid);\n    } catch(err) {\n        AppToaster.show({ timeout: 2000, message: err.message, intent: 'danger' });\n        success = false;\n    }\n    return success ? lid : null;\n}\n\nexport default function Alia() {\n    const TEXT_REG = /^\\S{1,100}$/;\n    const params = useParams();\n    const h = useHistory();\n    const { text = '' } = params;\n    const isValidText = text.match(TEXT_REG);\n    const [ isTextExist, setIsTextExist ] = useState(false);\n    const [ isTextExistInit, setIsTextExistInit ] = useState(false);\n    const [ isLogExist, setIsLogExist ] = useState(false);\n    const [ isLogExistInit, setIsLogExistInit ] = useState(false);\n    const isInit = isTextExistInit && isLogExistInit;\n\n    useEffect(() => {\n        async function validate() {\n            await delay(350);\n            const map = await textToIdMapService.findMapByText(text);\n            if (map) {\n                setIsTextExist(true);\n                const log = await logService.get(map.lid);\n                if (log) {\n                    setIsLogExist(true);\n                    h.replace(getUrlUtil.getLogDetailUrl(log.id));\n                    return;\n                }\n            }\n            setIsTextExistInit(true);\n            setIsLogExistInit(true);\n        }\n        validate();\n    }, [ text, h ]);\n\n    const title = <Tag intent=\"warning\" minimal large >{text}</Tag>;\n    let icon = '';\n    let description = '';\n    let action = null;\n\n    if (!isValidText) {\n        icon=\"error\";\n        description = \"格式不正确\";\n        action = null;\n    } else {\n        if (!isTextExist) {\n            icon = \"info-sign\";\n            description = \"此关键字尚未关联任何日志\";\n            action = <Button minimal onClick={() => createAndLink(text).then(lid => lid && h.replace(getUrlUtil.getLogDetailUrl(lid)))} intent=\"primary\">新建日志并关联</Button>;\n\n            if (text === 'm') {\n                icon = \"play\";\n                description = \"欢迎使用，开始创建你的第一篇日志吧！\";\n                action = <Button minimal onClick={() => createAndLink(text).then(lid => lid && h.replace(getUrlUtil.getLogDetailUrl(lid)))} intent=\"primary\">开启日志</Button>;\n            }\n        } else {\n            if (!isLogExist) {\n                icon = \"warning-sign\";\n                description = \"哎呀，首页的日志被删除了！\";\n                action = <Button minimal onClick={() => createAndUpdateLink(text).then(lid => lid && h.replace(getUrlUtil.getLogDetailUrl(lid)))} intent=\"primary\">新建日志并重新关联</Button>;\n\n                if (text === 'm') {\n                    icon = \"warning-sign\";\n                    description = \"日志消失了，重新关联吧！\";\n                    action = <Button minimal onClick={() => createAndUpdateLink(text).then(lid => lid && h.replace(getUrlUtil.getLogDetailUrl(lid)))} intent=\"primary\">新建日志并重新关联</Button>;\n                }\n            }\n        }\n    }\n\n    return (\n        <AppFrame header={\n            <NormalNavigator\n                showBack={text !== 'm'}\n                title=\"暂未关联日志\"\n            />\n        }>\n            <div className={styles.container}>\n                {\n                    !isInit && <Spinner />\n                }\n                {\n                    isInit && <NonIdealState\n                        icon={icon}\n                        title={title}\n                        action={action}\n                        extra={description}\n                    >\n                    </NonIdealState>\n                }\n            </div>\n        </AppFrame>\n    );\n}\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport names from 'classnames';\nimport styles from './index.module.css';\n\nconst SEGMENT = '\\n---';\n\nfunction findTopLevelEle(target) {\n    if (!(target instanceof HTMLElement)) return null;\n    if (!(target.parentNode instanceof HTMLElement)) return null;\n    if (target.classList.contains(styles.markdownBody)) return null;\n    const pnode = target.parentElement;\n    if (pnode.classList.contains(styles.markdownBody)) {\n        return target;\n    }\n    return findTopLevelEle(pnode);\n}\nfunction generatLinks(source) {\n    return source.replace(/(.?)#([A-Za-z0-9_\\u4E00-\\u9FA5]{1,100})/g, (m, p1, p2) => {\n        if (p1 === '\\\\') {\n            return '#' + p2;\n        }\n        return `${p1}[${m}](#/l/a/${p2})`;\n    });\n}\n\nexport default function MarkdownPreview(props) {\n    const { source: rsource = '', className, selectAble = false } = props;\n    const source = generatLinks(rsource);\n    const sepIdx = source.indexOf(SEGMENT);\n    const title = sepIdx > 0 ? source.slice(0, sepIdx) : '';\n    return (\n        <div\n            className={names(\n                \"markdown-body\",\n                className,\n                styles.markdownBody,\n                selectAble ? styles.active : ''\n            )}\n            onClick={evt => {\n                if (!props.selectAble || typeof props.onSelect !== 'function') return;\n                evt.preventDefault();\n                const el = findTopLevelEle(evt.target);\n                if (!el) return;\n                const sourcePosStr = el.getAttribute('data-sourcePos');\n                props.onSelect(sourcePosStr);\n            }}\n        >\n            <ReactMarkdown\n                source={props.short ? (title || source) : source}\n                sourcePos={selectAble}\n            />\n        </div>\n    );\n}","/* eslint-disable jsx-a11y/anchor-is-valid  */\n\nimport React from 'react';\nimport TimeAgo from 'timeago-react';\nimport { useHistory } from 'react-router-dom';\nimport { Card, Classes, Elevation } from '@blueprintjs/core';\nimport names from 'classnames';\nimport styles from './index.module.css';\nimport MarkdownPreview from 'component/markdownPreview';\nimport getUrlUtil from 'util/getUrlUtil';\n\nexport default function (props) {\n    const h = useHistory();\n    return (\n        <div className={styles.container}>\n            <div className={styles.meta}>\n                <span className={names(Classes.TEXT_MUTED, Classes.TEXT_SMALL)}>\n                    <TimeAgo datetime={props.date} locale='zh_CN' />\n                </span>\n            </div>\n            <Card elevation={Elevation.ONE} interactive onClick={() => h.push(getUrlUtil.getLogDetailUrl(props.id))}>\n                <div className={names(\"markdown-body\", styles.markdownBody)}>\n                    <MarkdownPreview source={props.children} short />\n                </div>\n            </Card>\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from '@blueprintjs/core';\nimport styles from './log.module.css';\nimport LogItem from 'component/logItem';\nimport AppFrame from 'component/appFrame';\nimport logService from 'service/log';\nimport NormalNavigator from 'component/normalNavigator';\nimport getUrlUtil from 'util/getUrlUtil';\n\nexport default function Log() {\n    const h = useHistory();\n    const [logs, setlogs] = useState([]);\n    useEffect(() => {\n        async function fetch() {\n            const list = await logService.all();\n            setlogs(list);\n        }\n        fetch();\n    }, []);\n    return (\n        <AppFrame header={\n            <NormalNavigator showBack title=\"日志管理\" actions={\n                <Button\n                    minimal intent=\"primary\" icon=\"annotation\"\n                    onClick={() => h.push(getUrlUtil.getLogCreateUrl())}\n                >创建日志</Button>\n            } />\n        }>\n            <div className={styles.container}>\n                {\n                    logs.map(message => (\n                        <LogItem\n                            key={message.id}\n                            id={message.id}\n                            date={message.time}\n                        >{message.content}</LogItem>\n                    ))\n                }\n            </div>\n        </AppFrame>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport styles from './index.module.css';\nimport { TextArea } from '@blueprintjs/core';\nimport { noop } from 'util/commonUtil';\n\nexport default function(props) {\n    const {\n        value = '',\n        onChange = noop,\n        onSubmit = noop,\n        placeholder = ''\n    } = props;\n    const [inputRef, setInputRef] = useState(null);\n    const rSelection = inputRef ? inputRef.getAttribute('data-selection') : '';\n    useEffect(() => {\n        if (rSelection) {\n            const selection = JSON.parse(rSelection);\n            inputRef.setSelectionRange(selection.from, selection.to);\n            inputRef.setAttribute('data-selection', '');\n        }\n    }, [ inputRef, rSelection ]);\n    return (\n        <div className={styles.container}>\n            <div className={styles.editorBox}>\n                <TextArea\n                    inputRef={ref => setInputRef(ref)}\n                    fill large\n                    autoFocus\n                    value={value}\n                    growVertically\n                    placeholder={placeholder}\n                    onChange={evt => onChange(evt.target.value)}\n                    onKeyUp={evt => {\n                        if (evt.keyCode === 13 && evt.altKey === true) {\n                            onSubmit();\n                        }\n                    }}\n                    style={{width: '100%', maxHeight: '65vh', resize: 'none'}}\n                    onKeyDown={evt => {\n                        if (evt.keyCode === 9) {\n                            evt.preventDefault();\n                            const el = evt.target;\n                            const indent = '    ';\n                            const start = el.selectionStart;\n                            const end = el.selectionEnd;\n                            const head = value.substring(0, start);\n                            const linesBegin = head.lastIndexOf('\\n') + 1;\n                            let selected = window.getSelection().toString();\n                            let expandSelected = value.slice(linesBegin, end);\n                            if (evt.shiftKey) {\n                                selected = expandSelected.replace(/^\\s{4}/, '').replace(/\\n\\s{4}/g, '\\n');\n                                onChange(value.substring(0, linesBegin) + selected + value.substring(end));\n                                inputRef.setAttribute('data-selection', JSON.stringify({\n                                    from: start - (/^\\s{4}/.test(expandSelected) ? indent.length : 0),\n                                    to: linesBegin + selected.length\n                                }));\n                            } else {\n                                expandSelected = indent + expandSelected.replace(/\\n/g, '\\n' + indent);\n                                onChange(value.substring(0, linesBegin) + expandSelected + value.substring(end));\n                                inputRef.setAttribute('data-selection', JSON.stringify({\n                                    from: start + indent.length,\n                                    to: linesBegin + expandSelected.length + indent\n                                }));\n                            }\n                        }\n                    }}\n                />\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport styles from './index.module.css';\nimport { noop } from 'util/commonUtil';\nimport MarkdownEditor from 'component/markdownEditor';\n\nexport default function LogCommentEditor (props) {\n    const { value = '', onChange = noop, placeholder = '', onConfirm = noop } = props;\n\n    return (\n        <div className={styles.container}>\n            <MarkdownEditor\n                value={value}\n                placeholder={placeholder}\n                onChange={val => onChange(val)}\n                onSubmit={() => onConfirm()}\n            />\n        </div>\n    );\n}","import store from 'store/index';\n\nconst get = (id) => store.logComments.get(Number(id));\n\nconst add = (id, logCommentInfo) => store.logComments.add({...logCommentInfo, lid: Number(id), time: new Date()});\n\nconst del = (id) => store.logComments.delete(Number(id));\n\nconst upd = (id, logCommentInfo) => store.logComments.update(Number(id), logCommentInfo);\n\nconst all = (id) => store.logComments.where({ lid: Number(id) }).toArray();\n\nexport default {\n    get, add, del, upd, all\n}","import React, { useState, useEffect} from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Button } from '@blueprintjs/core';\nimport styles from './logCommentCreate.module.css';\nimport LogCommentEditor from 'component/logCommentEditor';\nimport AppFrame from 'component/appFrame';\nimport NormalNavigation from 'component/normalNavigator';\nimport logCommentService from 'service/logComment';\n\nexport default function LogCommentCreate() {\n    const params = useParams();\n    const { id = null, cid = null } = params;\n    const [ initState, setInitState ] = useState(false);\n    const [ isNew, setIsNew ] = useState(true);\n    const [ value, setValue ] = useState('');\n    const h = useHistory();\n\n    useEffect(() => {\n        (async function() {\n            if (!cid) {\n                setInitState(true);\n                return;\n            };\n            logCommentService.get(cid)\n                .then(m => {\n                    m && setValue(m.content);\n                    setIsNew(false);\n                })\n                .finally(() => {\n                    setInitState(true);\n                });\n        })();\n    }, [ cid ]);\n    return (\n        <AppFrame header={\n            <NormalNavigation showBack title=\"评论\" actions={\n                <Button minimal icon=\"confirm\" intent=\"primary\" onClick={() => {\n                    let process;\n                    if (isNew) {\n                        process = logCommentService.add(id, {\n                            content: value\n                        });\n                    } else {\n                        process = logCommentService.upd(cid, {\n                            content: value\n                        });\n                    }\n                    process.then(() => {\n                        h.goBack();\n                    }).catch(err => {\n                        alert(err.message);\n                    });\n                }}>提交</Button>\n            } />\n        }>\n            <div className={styles.container}>\n                {\n                    initState && <LogCommentEditor\n                        value={value}\n                        onChange={val => setValue(val)}\n                        placeholder=\"请从此出开始...\"\n                    />\n                }\n            </div>\n        </AppFrame>\n    );\n}\n","import React from 'react';\nimport styles from './index.module.css';\nimport { noop } from 'util/commonUtil';\nimport MarkdownEditor from 'component/markdownEditor';\n\nexport default function LogEditor(props) {\n    const { value = '', onChange = noop, placeholder = '', onConfirm = noop } = props;\n    return (\n        <div className={styles.container}>\n            <MarkdownEditor\n                value={value}\n                placeholder={placeholder}\n                onChange={val => onChange(val)}\n                onSubmit={() => onConfirm()}\n            />\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Button } from '@blueprintjs/core';\nimport styles from './logCreate.module.css';\nimport LogEditor from 'component/logEditor';\nimport AppFrame from 'component/appFrame';\nimport NormalNavigator from 'component/normalNavigator';\nimport logService from 'service/log';\nimport { AppToaster } from 'util/toaster';\n\nexport default function LogCreate() {\n    const h = useHistory();\n    const params = useParams();\n    const { id = null } = params;\n    const [ initState, setInitState ] = useState(false);\n    const [ isNew, setIsNew ] = useState(true);\n    const [ value, setValue ] = useState('');\n\n    useEffect(() => {\n        (async function() {\n            if (!id) {\n                setInitState(true);\n                return;\n            };\n            logService.get(id)\n                .then(m => {\n                    m && setValue(m.content);\n                    setIsNew(false);\n                })\n                .finally(() => {\n                    setInitState(true);\n                });\n        })();\n    }, [ id ]);\n    return (\n        <AppFrame header={\n            <NormalNavigator showBack title=\"编辑\" actions={\n                <Button minimal intent=\"primary\" icon=\"confirm\" onClick={() => {\n                    let process;\n                    if (isNew) {\n                        process = logService.add({\n                            content: value\n                        });\n                    } else {\n                        process = logService.upd(id, {\n                            content: value\n                        });\n                    }\n                    process.then(() => {\n                        h.goBack();\n                    }).catch(err => {\n                        AppToaster.show({ timeout: 2000, message: err.message, intent: 'error' });\n                    });\n                }}>提交</Button>\n            } />\n        }>\n            <div className={styles.container}>\n                {\n                    initState && <LogEditor\n                        value={value}\n                        onChange={val => setValue(val)}\n                        placeholder=\"请由此开始...\"\n                    />\n                }\n            </div>\n        </AppFrame>\n    );\n}\n","import React from 'react';\nimport { Tooltip, Position } from '@blueprintjs/core';\nimport TimeAgo from 'timeago-react';\nimport dayjs from 'dayjs';\n\nexport default function(props) {\n    const { time = new Date(), showTooltip = true } = props;\n    return (\n        <Tooltip position={Position.TOP} disabled={!showTooltip} content={dayjs(time).format('YYYY.MM.DD HH:mm')} >\n            <TimeAgo datetime={time} locale='zh_CN' />\n        </Tooltip>\n    );\n}","/* eslint-disable jsx-a11y/anchor-is-valid  */\n\nimport React from 'react';\nimport styles from './index.module.css';\nimport names from 'classnames';\nimport { Classes, Icon, ButtonGroup, Button, Popover, Position, Divider } from '@blueprintjs/core';\nimport MarkdownPreview from 'component/markdownPreview';\nimport Ago from 'component/timeAgo';\nimport { noop } from 'util/commonUtil';\n\nfunction LogComment(props) {\n    const { comment: c, onRequestDelete = noop, onRequestUpdate = noop } = props;\n\n    return (\n        <div className={styles.comment} key={c.id}>\n            <div className={names(Classes.TEXT_MUTED, styles.commentMeta)}>\n                <div className={styles.commentMetaBlock}>\n                    <span className={styles.commentMetaItem}><Ago time={c.time} /></span>\n                </div>\n                <div className={names(styles.commentMetaBlock, styles.hoverVisible)}>\n                    <Popover content={\n                        <ButtonGroup>\n                            <Button minimal onClick={() => onRequestUpdate(c)}>编辑</Button>\n                            <Divider />\n                            <Button minimal intent=\"danger\" onClick={() => onRequestDelete(c.id)}>删除</Button>\n                        </ButtonGroup>\n                    } position={Position.TOP} interactionKind=\"hover\">\n                        <a\n                            className={names(\n                                styles.commentMetaItem,\n                                Classes.TEXT_MUTED,\n                                Classes.TEXT_SMALL\n                            )}\n                        >\n                            <Icon icon=\"more\" />\n                        </a>\n                    </Popover>\n                </div>\n            </div>\n            <div className={names(styles.commentContent, Classes.RUNNING_TEXT)}>\n                <MarkdownPreview source={c.content} />\n            </div>\n        </div>\n    );\n}\n\nexport default function LogComments(props) {\n    const { list = [], onRequestDelete, onRequestUpdate} = props;\n    return (\n        <div className={styles.comments}>\n            {\n                list.map(c => (\n                    <LogComment\n                        key={c.id}\n                        comment={c}\n                        onRequestDelete={onRequestDelete}\n                        onRequestUpdate={onRequestUpdate}\n                    />\n                ))\n            }\n        </div>\n    );\n}","\nconst REG = /(\\d+):(\\d+)-(\\d+):(\\d+)/;\n\nexport function sourcePosParse(sourcePosStr) {\n    const match = REG.exec(sourcePosStr);\n    if (!match) return null;\n    return {\n        startLine: Number(match[1]),\n        startIndex: Number(match[2]),\n        endLine: Number(match[3]),\n        endIndex: Number(match[4]),\n    }\n}\n\nexport function getRange(source, sourcePosStr) {\n    const sourceArr = source.split('\\n');\n    const sourcePos = sourcePosParse(sourcePosStr);\n    const range = {\n        from: sourceArr\n            .slice(0, sourcePos.startLine - 1)\n            .map(l => l.length)\n            .reduce((p, n) => p + n, 0) + (sourcePos.startLine - 1) + sourcePos.startIndex,\n        to: sourceArr\n            .slice(0, sourcePos.endLine - 1)\n            .map(l => l.length)\n            .reduce((p, n) => p + n, 0) + (sourcePos.endLine - 1) + sourcePos.endIndex,\n    };\n    return range;\n}\n\nexport function sliceCodeFromSource(source, sourcePosStr) {\n    const range = getRange(source, sourcePosStr);\n    return source.slice(range.from - 1, range.to - 1);\n}\nexport function replaceCodeFromSource(source, sourcePosStr, replacement) {\n    const range = getRange(source, sourcePosStr);\n    return source.slice(0, range.from - 1) + replacement + source.slice(range.to - 1);\n}","import React from 'react';\nimport MarkdownEditor from 'component/markdownEditor';\nimport { noop } from 'util/commonUtil';\nimport { Drawer, Position, Classes, Button} from '@blueprintjs/core';\n\nexport default function DrawerEditor(props) {\n    const {\n        isOpen = false,\n        onClose = noop,\n        value = '',\n        onChange = noop,\n        onConfirm = noop,\n        title = ''\n    } = props;\n    return (\n        <Drawer\n            icon=\"annotation\"\n            autoFocus\n            hasBackdrop\n            isOpen={isOpen}\n            position={Position.BOTTOM}\n            size=\"100%\"\n            onClose={onClose}\n            title={title}\n        >\n            <div\n                className={Classes.DRAWER_BODY}\n                style={{ backgroundColor: '#ebf1f5', height: '100%', padding: '0 15px' }}\n            >\n                <div style={{padding: '20px 0', maxWidth: 640, margin: 'auto'}}>\n                    <MarkdownEditor\n                        value={value}\n                        onChange={val => onChange(val)}\n                        onSubmit={() => onConfirm()}\n                    />\n                </div>\n                <div className=\"\">\n                    <div style={{\n                        display: 'flex',\n                        width: 640,\n                        margin: 'auto',\n                        alignItems: 'center'\n                    }}>\n                        <Button\n                            icon=\"confirm\"\n                            intent=\"primary\"\n                            className={Classes.DIALOG_CLOSE_BUTTON}\n                            onClick={onConfirm}\n                        >\n                            提交\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </Drawer>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport {\n    Button, Classes, Switch, Position, Code, Popover, Menu, MenuItem, ButtonGroup, Tooltip\n} from '@blueprintjs/core';\nimport styles from './logDetail.module.css';\nimport AppFrame from 'component/appFrame';\nimport logService from 'service/log';\nimport logCommentService from 'service/logComment';\nimport LogComments from 'component/logComments';\nimport { AppToaster } from 'util/toaster';\nimport MarkdownPreview from 'component/markdownPreview';\nimport { sliceCodeFromSource, replaceCodeFromSource } from 'util/sourcePosUtil';\nimport NormalNavigator from 'component/normalNavigator';\n// import NormalFooter from 'component/normalFooter';\nimport getUrlUtil from 'util/getUrlUtil';\nimport Ago from 'component/timeAgo';\nimport DrawerEditor from 'component/drawerEditor';\nimport { noop } from 'util/commonUtil';\nimport { DatePicker } from '@blueprintjs/datetime';\nimport dayjs from 'dayjs';\n\nconst NavigationActions = (props) => {\n    const h = useHistory();\n    const params = useParams();\n    const { onAppendRequest = noop } = props;\n    return (\n        < >\n                <Popover content={\n                    <DatePicker\n                        showActionsBar\n                        shortcuts\n                        highlightCurrentDay\n                        onChange={evt => {\n                            h.push(getUrlUtil.getAliaUrl(dayjs(evt).format('YYYYMMDD')))\n                        }}\n                    />\n                }>\n                    <Button minimal icon=\"book\" />\n                </Popover>\n                <Popover content={\n                    <Menu>\n                        <MenuItem\n                            icon=\"add\" text=\"追加片段\" label={<><Code>⌘</Code> + <Code>a</Code></>}\n                            onClick={onAppendRequest}\n                        />\n                        <MenuItem\n                            icon=\"annotation\" text=\"编辑全部\" label={<><Code>⌘</Code> + <Code>e</Code></>}\n                            onClick={() => h.push(getUrlUtil.getLogCreateUrl(params.id))}\n                        />\n                        <Menu.Divider />\n                        <MenuItem\n                            icon=\"delete\" intent=\"danger\" text=\"删除日志\" label={<><Code>⌘</Code> + <Code>d</Code></>}\n                            onClick={() => {\n                                if (!window.confirm(\"确认删除？\")) return;\n                                logService.del(params.id)\n                                    .then(() => {\n                                        AppToaster.show({ timeout: 2000, message: '删除成功', intent: 'success' });\n                                        h.goBack();\n                                    })\n                                    .catch(err => {\n                                        alert(err.message);\n                                    });\n                            }}\n                        />\n                    </Menu>\n                } position={Position.BOTTOM}>\n                    <Button minimal icon=\"cog\" />\n                </Popover>\n        </>\n    );\n};\n\nexport default function LogDetail() {\n    const params = useParams();\n    const [flag, setFlag] = useState(false);\n    const [logData, setLogData] = useState(null);\n    const [logCommentsData, setLogCommentsData] = useState([]);\n    const [partialEdit, setPartialEdit] = useState(false);\n    const [isOpenPartialDrawerEditor, setIsOpenPartialDrawerEditor] = useState(false);\n    const [isOpenAppendDrawerEditor, setIsOpenAppendDrawerEditor] = useState(false);\n    const [isOpenCommentDrawerEditor, setIsOpenCommentDrawerEditor] = useState(false);\n    const [partialSource, setPartialSource] = useState('');\n    const [appendSource, setAppendSource] = useState('');\n    const [commentSource, setCommentSource] = useState('');\n    const [commentRefId, setCommentRefId] = useState('');\n    const [posData, setPosData] = useState(null);\n\n    useEffect(() => {\n        async function fetchData() {\n            const logInfo = await logService.get(params.id);\n            const logCommentsInfo = await logCommentService.all(params.id);\n            setLogData(logInfo);\n            setLogCommentsData(logCommentsInfo);\n        }\n        fetchData();\n    }, [params.id, flag]);\n    return (\n        <AppFrame\n            header={\n                <NormalNavigator\n                    showBack\n                    title={logData && <span className={Classes.TEXT_MUTED}><Ago time={logData.time} /></span>}\n                    leftActions={\n                        <ButtonGroup>\n                            <Button\n                                icon=\"comment\"\n                                minimal\n                                onClick={() => {\n                                    setCommentSource('');\n                                    setIsOpenCommentDrawerEditor(true);\n                                    setCommentRefId('');\n                                }}\n                            ></Button>\n                            <NavigationActions onAppendRequest={() => setIsOpenAppendDrawerEditor(true)} />\n                        </ButtonGroup>\n                    }\n                    actions={\n                        <Tooltip content=\"片段编辑\">\n                            <Switch style={{ marginLeft: 5, marginBottom: 0 }} checked={partialEdit} onChange={() => setPartialEdit(!partialEdit)} />\n                        </Tooltip>\n                    }\n                />\n            }\n        >\n            {\n                logData && logCommentsData &&\n                <div className={styles.container}>\n                    <div className={styles.logContentBox}>\n                        <div className={styles.logContent}>\n                            <MarkdownPreview source={logData.content} selectAble={partialEdit} onSelect={\n                                pos => {\n                                    const partial = sliceCodeFromSource(logData.content, pos);\n                                    setIsOpenPartialDrawerEditor(true);\n                                    setPartialSource(partial);\n                                    setPosData(pos);\n                                }\n                            } />\n                        </div>\n                    </div>\n                    <div className={styles.commentBox}>\n                        <div className={styles.commentContent}>\n                            <LogComments\n                                list={logCommentsData}\n                                onRequestUpdate={c => {\n                                    setCommentSource(c.content);\n                                    setIsOpenCommentDrawerEditor(true);\n                                    setCommentRefId(c.id);\n                                }}\n                                onRequestDelete={cid => {\n                                    if (!window.confirm('你确定将此条记录删除吗？')) return;\n                                    logCommentService.del(cid)\n                                        .then(() => {\n                                            AppToaster.show({\n                                                timeout: 2000,\n                                                message: '删除成功',\n                                                intent: 'success'\n                                            });\n                                            setFlag(!flag);\n                                        })\n                                        .catch(err => {\n                                            alert(err.message);\n                                        });\n                                }}\n                            />\n                        </div>\n                    </div>\n                </div>\n            }\n            <DrawerEditor\n                title=\"编辑片段\"\n                isOpen={isOpenPartialDrawerEditor}\n                onClose={() => {\n                    setIsOpenPartialDrawerEditor(false);\n                }}\n                onConfirm={() => {\n                    setIsOpenPartialDrawerEditor(false);\n                    const source = replaceCodeFromSource(logData.content, posData, partialSource);\n                    logService\n                        .upd(logData.id, { content: source })\n                        .then(() => {\n                            setFlag(!flag);\n                            setPartialEdit(false);\n                        });\n                }}\n                value={partialSource}\n                onChange={val => setPartialSource(val)}\n            />\n            <DrawerEditor\n                title=\"追加片段\"\n                isOpen={isOpenAppendDrawerEditor}\n                onClose={() => {\n                    setIsOpenAppendDrawerEditor(false);\n                }}\n                onConfirm={() => {\n                    setIsOpenAppendDrawerEditor(false);\n                    logService\n                        .upd(logData.id, { content: logData.content + '\\n\\n' + appendSource })\n                        .then(() => {\n                            setFlag(!flag);\n                            setPartialEdit(false);\n                        });\n                }}\n                value={appendSource}\n                onChange={val => setAppendSource(val)}\n            />\n            <DrawerEditor\n                title={`${commentRefId ? '修改' : '发布'}评论`}\n                isOpen={isOpenCommentDrawerEditor}\n                onClose={() => {\n                    setIsOpenCommentDrawerEditor(false);\n                }}\n                onConfirm={() => {\n                    setIsOpenCommentDrawerEditor(false);\n                    let process;\n                    if (commentRefId) {\n                        process = logCommentService\n                            .upd(commentRefId, { content: commentSource });\n                    } else {\n                        process = logCommentService\n                            .add(logData.id, { content: commentSource });\n                    }\n                    process\n                        .then(() => {\n                            setFlag(!flag);\n                        });\n                }}\n                value={commentSource}\n                onChange={val => setCommentSource(val)}\n            />\n        </AppFrame>\n    );\n}","import React from 'react';\nimport { HashRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport AliaPage from './page/alia';\nimport LogPage from './page/log';\nimport LogCommentCreatePage from './page/logCommentCreate';\nimport LogCreatePage from './page/logCreate';\nimport LogDetailPage from './page/logDetail';\nimport 'normalize.css';\nimport '@blueprintjs/core/lib/css/blueprint.css';\nimport '@blueprintjs/icons/lib/css/blueprint-icons.css';\nimport '@blueprintjs/datetime/lib/css/blueprint-datetime.css';\nimport 'github-markdown-css';\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/l/l\" component={LogPage} />\n                <Route path=\"/l/d/:id\" component={LogDetailPage} />\n                <Route path=\"/l/a/:text\" component={AliaPage} />\n                <Route path=\"/l/ce/:id?\" component={LogCreatePage} />\n                <Route path=\"/l/lc/ce/:id/:cid?\" component={LogCommentCreatePage} />\n                <Redirect to=\"/l/a/m\" />\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"logDetail_container__w0WFV\",\"logContentBox\":\"logDetail_logContentBox__2FBOS\",\"logContent\":\"logDetail_logContent__2q741\",\"meta\":\"logDetail_meta__IpNSK\",\"commentBox\":\"logDetail_commentBox__2xmER\",\"commentContent\":\"logDetail_commentContent__2yOe-\",\"footerActions\":\"logDetail_footerActions__ax9Jf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"appFrame_container__28Uto\",\"header\":\"appFrame_header__VXnlL\",\"body\":\"appFrame_body__1wP9K\",\"footer\":\"appFrame_footer__PUQHy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"markdownBody\":\"markdownPreview_markdownBody__3D-P7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"logItem_container__1HQ_G\",\"metaBlock\":\"logItem_metaBlock__19X2m\",\"meta\":\"logItem_meta__JAOjF\",\"metaItem\":\"logItem_metaItem__37psE\",\"markdownBody\":\"logItem_markdownBody__1O-pH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"markdownEditor_container__1Bh7Q\",\"editorBox\":\"markdownEditor_editorBox__2jfkZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"alia_container__3sOFO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"log_container__1snyH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"logCommentCreate_container__3qGs1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"logCommentEditor_textarea__ltzcQ\",\"container\":\"logCommentEditor_container__3s0iH\",\"buttonWrap\":\"logCommentEditor_buttonWrap__o5tot\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"logCreate_container__19vSt\"};"],"sourceRoot":""}