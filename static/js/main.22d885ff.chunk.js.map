{"version":3,"sources":["page sync nonrecursive //.js$","App.js","serviceWorker.js","index.js","component/logItem/index.js","page/log.js","component/logEditor/index.js","page/logCreate.js","store/index.js","component/logItem/index.module.css","component/appFrame/index.module.css","component/appFrame/index.js","page/index.js","component/logEditor/index.module.css","page/log.module.css","page/logCreate.module.css"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","App","pages","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","props","h","useHistory","useState","visible","setVisible","className","styles","container","meta","names","Classes","TEXT_MUTED","TEXT_SMALL","datetime","date","locale","metaBlock","metaItem","onClick","push","store","logMessages","delete","catch","err","alert","message","markdownBody","source","children","Navigatior","DARK","align","to","component","setLogMessages","useEffect","a","orderBy","toArray","list","reverse","fetch","header","footer","key","time","content","path","exact","LogEditor","initState","setInitState","value","setValue","get","Number","m","finally","fill","large","growVertically","placeholder","onChange","evt","target","buttonWrap","intent","add","Date","href","handleSubmit","PageNavigator","replace","icon","minimal","useParams","db","Dexie","version","stores","body","routes","pageCtx","require","forEach","route"],"mappings":"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","file":"static/js/main.22d885ff.chunk.js","sourcesContent":["var map = {\n\t\"./index.js\": 52,\n\t\"./log.js\": 256,\n\t\"./logCreate.js\": 257\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 141;","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport pages from './page';\nimport 'normalize.css';\nimport '@blueprintjs/core/lib/css/blueprint.css';\nimport '@blueprintjs/icons/lib/css/blueprint-icons.css';\nimport 'github-markdown-css';\n\nfunction App() {\n  return (\n    <Router>\n      {pages}\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable */\n\nimport React, { useState } from 'react';\nimport TimeAgo from 'timeago-react';\nimport { useHistory } from 'react-router-dom';\nimport { Card, Classes } from '@blueprintjs/core';\nimport names from 'classnames';\nimport styles from './index.module.css';\nimport store from 'store';\nimport ReactMarkdown from 'react-markdown';\n\nexport default function (props) {\n    const h = useHistory();\n    const [ visible, setVisible ] = useState(true);\n    return (\n        visible && <div className={styles.container}>\n            <div className={styles.meta}>\n                <span className={names(Classes.TEXT_MUTED, Classes.TEXT_SMALL)}>\n                    <TimeAgo datetime={props.date} locale='zh_CN' />\n                </span>\n                <span className={styles.metaBlock}>\n                    <a\n                        className={names(\n                            styles.metaItem,\n                            Classes.TEXT_MUTED,\n                            Classes.TEXT_SMALL\n                        )}\n                        onClick={() => h.push(`/log.createOrEdit/${props.id}`)}\n                    >\n                        编辑\n                    </a>\n                    <a\n                        className={names(\n                            styles.metaItem,\n                            Classes.TEXT_MUTED,\n                            Classes.TEXT_SMALL\n                        )}\n                        onClick={() => {\n                            store.logMessages.delete(props.id)\n                            .then(() => {\n                                setVisible(false);\n                            })\n                            .catch(err => {\n                                alert(err.message);\n                            });\n                        }}\n                    >\n                        删除\n                    </a>\n                </span>\n            </div>\n            <Card>\n                <div className={names(\"markdown-body\", styles.markdownBody)}>\n                    <ReactMarkdown source={props.children} />\n                </div>\n            </Card>\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport {\n    Navbar, NavbarGroup, NavbarDivider, NavbarHeading, Button, Classes\n} from '@blueprintjs/core';\nimport store from 'store/index';\nimport styles from './log.module.css';\nimport LogItem from 'component/logItem';\nimport AppFrame from 'component/appFrame';\n\nfunction Navigatior() {\n    const h = useHistory();\n    return (\n        <Navbar className={Classes.DARK}>\n            <NavbarGroup align=\"left\">\n                <NavbarHeading>\n                    <Link to=\"/\">英雄笔记</Link>\n                </NavbarHeading>\n                <NavbarDivider />\n                <NavbarHeading>日志</NavbarHeading>\n            </NavbarGroup>\n            <NavbarGroup align=\"right\">\n                <Button onClick={() => h.push('/log.createOrEdit')}>创建记录</Button>\n            </NavbarGroup>\n        </Navbar>\n    );\n}\n\nfunction Log() {\n    const [logMessages, setLogMessages] = useState([]);\n    useEffect(() => {\n        async function fetch() {\n            const list = await store.logMessages.orderBy('time').toArray();\n            setLogMessages(list.reverse());\n        }\n        fetch();\n    }, []);\n    return (\n        <AppFrame header={<Navigatior />} footer={<span>草木皆兵</span>}>\n            <div className={styles.container}>\n                { logMessages.map(message => (\n                    <LogItem key={message.id} id={message.id} date={message.time}>{message.content}</LogItem>\n                ))}\n            </div>\n        </AppFrame>\n    );\n}\n\nexport const component = Log;\nexport const path = '/log';\nexport const exact = true;","import React, { useState, useEffect } from 'react';\nimport { Button, Card, TextArea } from '@blueprintjs/core';\nimport styles from './index.module.css';\nimport store from 'store';\n\nfunction handleSubmit(value) {\n    store.logMessages.add({\n        time: new Date(),\n        content: value\n    }).then(() => {\n        window.location.href = '#/log';\n    }).catch(err => {\n        alert(err.message);\n    });\n}\n\nexport default function LogEditor (props) {\n    const { id } = props;\n    const [ initState, setInitState ] = useState(false);\n    const [ value, setValue ] = useState('');\n\n    useEffect(() => {\n        (async function() {\n            store.logMessages.get(Number(id))\n                .then(m => m && setValue(m.content))\n                .finally(() => setInitState(true));\n        })();\n    }, [ id ]);\n    return (\n        <div className={styles.container}>\n            {\n                initState && <Card>\n                    <TextArea\n                        fill\n                        large\n                        value={value}\n                        growVertically\n                        placeholder=\"在此开始...\"\n                        onChange={evt => setValue(evt.target.value)}\n                    />\n                    <div className={styles.buttonWrap}>\n                        <Button intent=\"primary\" onClick={() => handleSubmit(value)}>提交</Button>\n                    </div>\n                </Card>\n            }\n        </div>\n    );\n}","import React from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport {\n    Navbar, NavbarGroup, Button, Classes\n} from '@blueprintjs/core';\nimport styles from './logCreate.module.css';\nimport LogEditor from 'component/logEditor';\nimport AppFrame from 'component/appFrame';\n\nfunction PageNavigator() {\n    const h = useHistory();\n    return (\n        <Navbar className={Classes.DARK}>\n            <NavbarGroup align=\"left\">\n                <Button\n                    onClick={() => h.replace('/log')}\n                    icon=\"chevron-left\"\n                    minimal\n                >返回</Button>\n            </NavbarGroup>\n        </Navbar>\n    );\n}\n\nfunction LogCreate() {\n    const params = useParams();\n    const { id = null } = params;\n    return (\n        <AppFrame header={<PageNavigator />}>\n            <div className={styles.container}>\n                <LogEditor id={id} />\n            </div>\n        </AppFrame>\n    );\n}\n\nexport const component = LogCreate;\nexport const path = '/log.createOrEdit/:id?';","import Dexie from 'dexie';\n\nconst db = new Dexie('EfficientDatabase');\n\ndb.version(2).stores({\n    logMessages: '++id, content, time'\n});\n\nexport default db;\nwindow.db = db;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"logItem_container__1HQ_G\",\"metaBlock\":\"logItem_metaBlock__19X2m\",\"meta\":\"logItem_meta__JAOjF\",\"metaItem\":\"logItem_metaItem__37psE\",\"markdownBody\":\"logItem_markdownBody__1O-pH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"appFrame_container__28Uto\",\"header\":\"appFrame_header__VXnlL\",\"body\":\"appFrame_body__1wP9K\",\"footer\":\"appFrame_footer__PUQHy\"};","import React from 'react';\nimport styles from './index.module.css';\n\nexport default function(props) {\n    return (\n        <div className={styles.container}>\n            { props.header && <div className={styles.header}>{props.header}</div> }\n            <div className={styles.body}>{props.children}</div>\n            { props.footer && <div className={styles.footer}>{props.footer}</div> }\n        </div>\n    );\n}","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nconst routes = [];\nconst pageCtx = require.context('.', false, /\\.js$/);\n\npageCtx.keys().forEach(key => {\n    if (key === './index.js') return;\n    const route = pageCtx(key);\n    routes.push(<Route {...route} key={key} />);\n});\n\nexport default routes;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"logEditor_textarea__28vya\",\"container\":\"logEditor_container__1GeHV\",\"buttonWrap\":\"logEditor_buttonWrap__1W5No\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"log_container__1snyH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"logCreate_container__19vSt\"};"],"sourceRoot":""}