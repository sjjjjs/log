{"version":3,"sources":["component/logCommentEditor/index.module.css","page/logCreate.module.css","component/logEditor/index.module.css","component/logComments/index.module.css","util/getUrlUtil.js","component/normalNavigator/index.js","component/appFrame/index.js","store/index.js","service/log.js","service/textToIdMap.js","util/toaster.js","util/commonUtil.js","page/alia.js","component/markdownPreview/index.js","component/logItem/index.js","page/log.js","component/markdownEditor/index.js","component/logCommentEditor/index.js","service/logComment.js","page/logCommentCreate.js","component/logEditor/index.js","page/logCreate.js","component/timeAgo/index.js","component/logComments/index.js","util/sourcePosUtil.js","page/logDetail.js","App.js","serviceWorker.js","index.js","page/logDetail.module.css","component/markdownPreview/index.module.css","component/appFrame/index.module.css","component/logItem/index.module.css","component/markdownEditor/index.module.css","component/normalNavigator/index.module.css","page/alia.module.css","page/log.module.css","page/logCommentCreate.module.css"],"names":["module","exports","id","text","NormalNavigator","props","actions","h","useHistory","fixedToTop","style","userSelect","className","styles","container","Group","align","Heading","icon","minimal","onClick","push","getUrlUtil","dayjs","Date","now","format","body","children","db","Dexie","version","stores","logs","logComments","textToIdMap","store","get","Number","logInfo","add","time","delete","update","orderBy","toArray","then","l","reverse","where","first","match","catch","lid","item","AppToaster","Toaster","create","position","Position","TOP","noop","delay","ms","Promise","resolve","setTimeout","createAndLink","a","success","t","logService","content","textToIdMapService","show","timeout","message","intent","createAndUpdateLink","Alia","params","useParams","isValidText","useState","isTextExist","setIsTextExist","isTextExistInit","setIsTextExistInit","isLogExist","setIsLogExist","isLogExistInit","setIsLogExistInit","isInit","useEffect","map","log","replace","validate","title","large","description","action","header","showBack","extra","MarkdownPreview","source","rsource","selectAble","m","p1","p2","generatLinks","sepIdx","indexOf","slice","names","Classes","RUNNING_TEXT","markdownBody","active","evt","onSelect","shiftKey","preventDefault","el","findTopLevelEle","target","HTMLElement","parentNode","classList","contains","pnode","parentElement","sourcePosStr","getAttribute","short","sourcePos","meta","TEXT_MUTED","TEXT_SMALL","datetime","date","locale","elevation","Elevation","ONE","interactive","Log","setlogs","list","fetch","showActionsBar","shortcuts","highlightCurrentDay","onChange","BOTTOM_RIGHT","rightIcon","key","value","onSubmit","placeholder","inputRef","setInputRef","rSelection","selection","JSON","parse","setSelectionRange","from","to","setAttribute","editorBox","fill","autoFocus","growVertically","ref","width","maxHeight","resize","onKeyUp","keyCode","altKey","onKeyDown","start","selectionStart","end","selectionEnd","linesBegin","substring","lastIndexOf","selected","window","getSelection","toString","expandSelected","stringify","test","length","LogCommentEditor","onConfirm","val","logCommentInfo","LogCommentCreate","cid","initState","setInitState","isNew","setIsNew","setValue","logCommentService","finally","goBack","err","alert","LogEditor","LogCreate","showTooltip","disabled","LogComment","c","comment","onRequestDelete","onRequestUpdate","commentMeta","commentMetaBlock","commentMetaItem","hoverVisible","interactionKind","commentContent","LogComments","comments","REG","getRange","sourceArr","split","exec","startLine","startIndex","endLine","endIndex","sourcePosParse","reduce","p","n","MODE","LogDetail","logFlag","setLogFlag","commentsFlag","setCommentsFlag","logData","setLogData","logCommentsData","setLogCommentsData","editSource","setEditSource","commentRefId","setCommentRefId","posData","setPosData","mode","setMode","fetchData","logCommentsInfo","viewAction","Divider","confirm","editAction","commentAction","appendAction","commentEditAction","partialEditAction","replacement","range","replaceCodeFromSource","logContentBox","logContent","pos","partial","sliceCodeFromSource","commentBox","editorOuter","editorInner","App","path","component","LogPage","LogDetailPage","AliaPage","LogCreatePage","LogCommentCreatePage","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.909345ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"logCommentEditor_textarea__ltzcQ\",\"container\":\"logCommentEditor_container__3s0iH\",\"buttonWrap\":\"logCommentEditor_buttonWrap__o5tot\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"logCreate_container__19vSt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"logEditor_textarea__28vya\",\"container\":\"logEditor_container__1GeHV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"logComments_comments__1LjH6\",\"comment\":\"logComments_comment__GP3sS\",\"commentTime\":\"logComments_commentTime__3ccqY\",\"commentMeta\":\"logComments_commentMeta__2p6gN\",\"commentMetaItem\":\"logComments_commentMetaItem__2-ZM7\"};","\nexport default {\n    getHome: () => '/l',\n    getLogUrl: () => '/l/l',\n    getLogDetailUrl: (id) => `/l/d/${id}`,\n    getAliaUrl: text => `/l/a/${text}`,\n    getLogCreateUrl: (id = '') => `/l/ce/${id}`,\n    getLogCommentCreateUrl: (id, cid = '') => `/l/lc/ce/${id}/${cid}`\n}\n","\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n    Navbar, Button\n} from '@blueprintjs/core';\nimport getUrlUtil from 'util/getUrlUtil';\nimport styles from './index.module.css';\nimport dayjs from 'dayjs';\n\nexport default function NormalNavigator(props) {\n    const { actions = null } = props;\n    const h = useHistory();\n    return (\n        <Navbar fixedToTop style={{ userSelect: 'none'}}>\n            <div className={styles.container}>\n                <Navbar.Group align=\"left\">\n                    <Navbar.Heading>\n                        <h3 >&lt;HeroBook /&gt;</h3>\n                    </Navbar.Heading>\n                    <Button icon=\"home\" minimal text=\"Home\" onClick={() => {\n                        h.push(getUrlUtil.getHome());\n                    }} />\n                    <Button icon=\"book\" minimal text=\"List\" onClick={() => {\n                        h.push(getUrlUtil.getLogUrl());\n                    }} />\n                    <Button text=\"Today\" minimal icon=\"pin\" onClick={() => {\n                        h.push( getUrlUtil.getAliaUrl(dayjs(Date.now()).format('YYYYMMDD')));\n                    }} />\n                </Navbar.Group>\n                { \n                    actions && <Navbar.Group align=\"right\">\n                        { actions }\n                    </Navbar.Group>\n                }\n            </div>\n        </Navbar>\n    );\n}","import React from 'react';\nimport styles from './index.module.css';\nimport NormalNavigator from '../normalNavigator';\n\nexport default function(props) {\n    return (\n        <div className={styles.container}>\n            <NormalNavigator actions={props.actions} />\n            <div className={styles.body}>{props.children}</div>\n        </div>\n    );\n}","import Dexie from 'dexie';\n\nconst db = new Dexie('EfficientDatabase');\n\ndb.version(1).stores({\n    logs: '++id, content, time'\n});\n\ndb.version(2).stores({\n    logComments: '++id, content, time, lid'\n});\n\ndb.version(3).stores({\n    textToIdMap: '++id, &text, lid'\n});\n\nexport default db;\n\n// import SyncClient from 'sync-client';\n// // SyncClient is a subclass of Dexie\n\n// const databaseName = 'testDB'; // The name for the indexedDB database\n// const versions = [\n//     {\n//         version: 1,\n//         stores: {\n//           logs: '++id, content, time'\n//         }\n//     }, {\n//         version: 2,\n//         stores: {\n//             logComments: '++id, content, time, lid'\n//         }\n//     }, {\n//         version: 3,\n//         stores: {\n//             textToIdMap: '++id, &text, lid'\n//         }\n//     }\n// ];\n\n// const syncClient = new SyncClient(databaseName, versions, {\n\n// });\n\n// export default syncClient;\n// window.syncClient = syncClient;\n\n// syncClient.syncable.connect('sync_client_protocol', 'http://127.0.0.1:3000');\n// syncClient.syncable.on('statusChanged', function (newStatus, url) {\n//     console.log (\"Sync Status changed: \" + newStatus, url);\n// });","import store from 'store/index';\n\nconst get = (id) => store.logs.get(Number(id));\n\nconst add = (logInfo) => store.logs.add({...logInfo, time: new Date()});\n\nconst del = (id) => store.logs.delete(Number(id));\n\nconst upd = (id, logInfo) => store.logs.update(Number(id), logInfo);\n\nconst all = () => store.logs.orderBy('time').toArray().then(l => l.reverse());\n\nexport default {\n    get, add, del, upd, all\n}","import store from 'store/index';\n\nconst findMapByText = text => store\n    .textToIdMap\n    .where({text})\n    .first(match => match)\n    .catch(() => null);\n\nconst link = (text, lid) => store.textToIdMap.add({ text, lid });\nconst relink = (text, lid) => store.textToIdMap.where({ text }).first(item => store.textToIdMap.update(item.id, { lid }));\n\nexport default {\n    findMapByText,\n    link,\n    relink\n};","import { Position, Toaster } from \"@blueprintjs/core\";\n \n\nexport const AppToaster = Toaster.create({\n    className: \"recipe-toaster\",\n    position: Position.TOP\n});","\nexport const noop = () => false;\n\nexport const delay = ms => new Promise(resolve => {\n    setTimeout(resolve, ms);\n});","\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport AppFrame from 'component/appFrame';\nimport NormalNavigator from 'component/normalNavigator';\nimport logService from 'service/log';\nimport textToIdMapService from 'service/textToIdMap';\nimport styles from './alia.module.css';\nimport { Button, NonIdealState, Tag, Spinner } from '@blueprintjs/core';\nimport { AppToaster } from 'util/toaster';\nimport getUrlUtil from 'util/getUrlUtil';\nimport { delay } from 'util/commonUtil';\n\nconst createAndLink = async (text) => {\n    let success = true;\n    let lid;\n    let t = '';\n    if (text === 'm') { t = '美好的一天！' }\n    try {\n        lid = await logService.add({ content: t || text + '\\n---\\n' });\n        await textToIdMapService.link(text, lid);\n    } catch(err) {\n        AppToaster.show({ timeout: 2000, message: err.message, intent: 'danger' });\n        success = false;\n    }\n    return success ? lid : null;\n}\nconst createAndUpdateLink = async (text) => {\n    let success = true;\n    let lid;\n    let t = '';\n    if (text === 'm') { t = '美好的一天！' }\n    try {\n        lid = await logService.add({ content: t || text + '\\n---\\n' });\n        await textToIdMapService.relink(text, lid);\n    } catch(err) {\n        AppToaster.show({ timeout: 2000, message: err.message, intent: 'danger' });\n        success = false;\n    }\n    return success ? lid : null;\n}\n\nexport default function Alia() {\n    const TEXT_REG = /^\\S{1,100}$/;\n    const params = useParams();\n    const h = useHistory();\n    const { text = '' } = params;\n    const isValidText = text.match(TEXT_REG);\n    const [ isTextExist, setIsTextExist ] = useState(false);\n    const [ isTextExistInit, setIsTextExistInit ] = useState(false);\n    const [ isLogExist, setIsLogExist ] = useState(false);\n    const [ isLogExistInit, setIsLogExistInit ] = useState(false);\n    const isInit = isTextExistInit && isLogExistInit;\n\n    useEffect(() => {\n        async function validate() {\n            await delay(350);\n            const map = await textToIdMapService.findMapByText(text);\n            if (map) {\n                setIsTextExist(true);\n                const log = await logService.get(map.lid);\n                if (log) {\n                    setIsLogExist(true);\n                    h.replace(getUrlUtil.getLogDetailUrl(log.id));\n                    return;\n                }\n            }\n            setIsTextExistInit(true);\n            setIsLogExistInit(true);\n        }\n        validate();\n    }, [ text, h ]);\n\n    const title = <Tag intent=\"warning\" minimal large >{text}</Tag>;\n    let icon = '';\n    let description = '';\n    let action = null;\n\n    if (!isValidText) {\n        icon=\"error\";\n        description = \"格式不正确\";\n        action = null;\n    } else {\n        if (!isTextExist) {\n            icon = \"info-sign\";\n            description = \"此关键字尚未关联任何日志\";\n            action = <Button minimal onClick={() => createAndLink(text).then(lid => lid && h.replace(getUrlUtil.getLogDetailUrl(lid)))} intent=\"primary\">新建日志并关联</Button>;\n\n            if (text === 'm') {\n                icon = \"play\";\n                description = \"欢迎使用，开始创建你的第一篇日志吧！\";\n                action = <Button minimal onClick={() => createAndLink(text).then(lid => lid && h.replace(getUrlUtil.getLogDetailUrl(lid)))} intent=\"primary\">开启日志</Button>;\n            }\n        } else {\n            if (!isLogExist) {\n                icon = \"warning-sign\";\n                description = \"哎呀，首页的日志被删除了！\";\n                action = <Button minimal onClick={() => createAndUpdateLink(text).then(lid => lid && h.replace(getUrlUtil.getLogDetailUrl(lid)))} intent=\"primary\">新建日志并重新关联</Button>;\n\n                if (text === 'm') {\n                    icon = \"warning-sign\";\n                    description = \"日志消失了，重新关联吧！\";\n                    action = <Button minimal onClick={() => createAndUpdateLink(text).then(lid => lid && h.replace(getUrlUtil.getLogDetailUrl(lid)))} intent=\"primary\">新建日志并重新关联</Button>;\n                }\n            }\n        }\n    }\n\n    return (\n        <AppFrame header={\n            <NormalNavigator\n                showBack={text !== 'm'}\n                title=\"暂未关联日志\"\n            />\n        }>\n            <div className={styles.container}>\n                {\n                    !isInit && <Spinner />\n                }\n                {\n                    isInit && <NonIdealState\n                        icon={icon}\n                        title={title}\n                        action={action}\n                        extra={description}\n                    >\n                    </NonIdealState>\n                }\n            </div>\n        </AppFrame>\n    );\n}\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport names from 'classnames';\nimport styles from './index.module.css';\nimport { Classes } from '@blueprintjs/core';\n\nconst SEGMENT = '\\n---';\n\nfunction findTopLevelEle(target) {\n    if (!(target instanceof HTMLElement)) return null;\n    if (!(target.parentNode instanceof HTMLElement)) return null;\n    if (target.classList.contains(styles.markdownBody)) return null;\n    const pnode = target.parentElement;\n    if (pnode.classList.contains(styles.markdownBody)) {\n        return target;\n    }\n    return findTopLevelEle(pnode);\n}\nfunction generatLinks(source) {\n    return source.replace(/(.?)#([A-Za-z0-9_\\u4E00-\\u9FA5]{1,100})/g, (m, p1, p2) => {\n        if (p1 === '\\\\') {\n            return '#' + p2;\n        }\n        return `${p1}[${m}](#/l/a/${p2})`;\n    });\n}\n\nexport default function MarkdownPreview(props) {\n    const { source: rsource = '', className, selectAble = false } = props;\n    const source = generatLinks(rsource);\n    const sepIdx = source.indexOf(SEGMENT);\n    const title = sepIdx > 0 ? source.slice(0, sepIdx) : '';\n    return (\n        <div\n            className={names(\n                Classes.RUNNING_TEXT,\n                className,\n                styles.markdownBody,\n                selectAble ? styles.active : ''\n            )}\n            onClick={evt => {\n                if (!props.selectAble || typeof props.onSelect !== 'function') return;\n                if (!evt.shiftKey) return;\n                evt.preventDefault();\n                const el = findTopLevelEle(evt.target);\n                if (!el) return;\n                const sourcePosStr = el.getAttribute('data-sourcePos');\n                props.onSelect(sourcePosStr);\n            }}\n        >\n            <ReactMarkdown\n                source={props.short ? (title || source) : source}\n                sourcePos={selectAble}\n            />\n        </div>\n    );\n}","/* eslint-disable jsx-a11y/anchor-is-valid  */\n\nimport React from 'react';\nimport TimeAgo from 'timeago-react';\nimport { useHistory } from 'react-router-dom';\nimport { Card, Classes, Elevation } from '@blueprintjs/core';\nimport names from 'classnames';\nimport styles from './index.module.css';\nimport MarkdownPreview from 'component/markdownPreview';\nimport getUrlUtil from 'util/getUrlUtil';\n\nexport default function (props) {\n    const h = useHistory();\n    return (\n        <div className={styles.container}>\n            <div className={styles.meta}>\n                <span className={names(Classes.TEXT_MUTED, Classes.TEXT_SMALL)}>\n                    <TimeAgo datetime={props.date} locale='zh_CN' />\n                </span>\n            </div>\n            <Card elevation={Elevation.ONE} interactive onClick={() => h.push(getUrlUtil.getLogDetailUrl(props.id))}>\n                <MarkdownPreview source={props.children} short />\n            </Card>\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Popover, Position } from '@blueprintjs/core';\nimport { DatePicker } from '@blueprintjs/datetime';\nimport styles from './log.module.css';\nimport LogItem from 'component/logItem';\nimport AppFrame from 'component/appFrame';\nimport logService from 'service/log';\nimport getUrlUtil from 'util/getUrlUtil';\nimport dayjs from 'dayjs';\n\nexport default function Log() {\n    const h = useHistory();\n    const [logs, setlogs] = useState([]);\n    useEffect(() => {\n        async function fetch() {\n            const list = await logService.all();\n            setlogs(list);\n        }\n        fetch();\n    }, []);\n    return (\n        <AppFrame actions={\n            <Popover content={\n                <DatePicker\n                    showActionsBar\n                    shortcuts\n                    highlightCurrentDay\n                    onChange={evt => {\n                        evt && h.push( getUrlUtil.getAliaUrl(dayjs(evt).format('YYYYMMDD')));\n                    }}\n                />\n            } position={Position.BOTTOM_RIGHT}>\n                <Button text=\"Daily\" minimal rightIcon=\"caret-down\" />\n            </Popover>\n        }>\n            <div className={styles.container}>\n                {\n                    logs.map(message => (\n                        <LogItem\n                            key={message.id}\n                            id={message.id}\n                            date={message.time}\n                        >{message.content}</LogItem>\n                    ))\n                }\n            </div>\n        </AppFrame>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport styles from './index.module.css';\nimport { TextArea } from '@blueprintjs/core';\nimport { noop } from 'util/commonUtil';\n\nexport default function(props) {\n    const {\n        value = '',\n        onChange = noop,\n        onSubmit = noop,\n        placeholder = ''\n    } = props;\n    const [inputRef, setInputRef] = useState(null);\n    const rSelection = inputRef ? inputRef.getAttribute('data-selection') : '';\n    useEffect(() => {\n        if (rSelection) {\n            const selection = JSON.parse(rSelection);\n            inputRef.setSelectionRange(selection.from, selection.to);\n            inputRef.setAttribute('data-selection', '');\n        }\n    }, [ inputRef, rSelection ]);\n    return (\n        <div className={styles.container}>\n            <div className={styles.editorBox}>\n                <TextArea\n                    fill large\n                    autoFocus\n                    value={value}\n                    growVertically\n                    placeholder={placeholder}\n                    inputRef={ref => setInputRef(ref)}\n                    style={{width: '100%', maxHeight: '65vh', resize: 'none'}}\n                    onChange={evt => onChange(evt.target.value)}\n                    onKeyUp={evt => {\n                        if (evt.keyCode === 13 && evt.altKey === true) {\n                            onSubmit();\n                        }\n                    }}\n                    onKeyDown={evt => {\n                        if (evt.keyCode === 9) {\n                            evt.preventDefault();\n                            const el = evt.target;\n                            const indent = '    ';\n                            const start = el.selectionStart;\n                            const end = el.selectionEnd;\n                            const head = value.substring(0, start);\n                            const linesBegin = head.lastIndexOf('\\n') + 1;\n                            let selected = window.getSelection().toString();\n                            let expandSelected = value.slice(linesBegin, end);\n                            if (evt.shiftKey) {\n                                selected = expandSelected.replace(/^\\s{4}/, '').replace(/\\n\\s{4}/g, '\\n');\n                                onChange(value.substring(0, linesBegin) + selected + value.substring(end));\n                                inputRef.setAttribute('data-selection', JSON.stringify({\n                                    from: start - (/^\\s{4}/.test(expandSelected) ? indent.length : 0),\n                                    to: linesBegin + selected.length\n                                }));\n                            } else {\n                                expandSelected = indent + expandSelected.replace(/\\n/g, '\\n' + indent);\n                                onChange(value.substring(0, linesBegin) + expandSelected + value.substring(end));\n                                inputRef.setAttribute('data-selection', JSON.stringify({\n                                    from: start + indent.length,\n                                    to: linesBegin + expandSelected.length + indent\n                                }));\n                            }\n                        }\n                    }}\n                />\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport styles from './index.module.css';\nimport { noop } from 'util/commonUtil';\nimport MarkdownEditor from 'component/markdownEditor';\n\nexport default function LogCommentEditor (props) {\n    const { value = '', onChange = noop, placeholder = '', onConfirm = noop } = props;\n\n    return (\n        <div className={styles.container}>\n            <MarkdownEditor\n                value={value}\n                placeholder={placeholder}\n                onChange={val => onChange(val)}\n                onSubmit={() => onConfirm()}\n            />\n        </div>\n    );\n}","import store from 'store/index';\n\nconst get = (id) => store.logComments.get(Number(id));\n\nconst add = (id, logCommentInfo) => store.logComments.add({...logCommentInfo, lid: Number(id), time: new Date()});\n\nconst del = (id) => store.logComments.delete(Number(id));\n\nconst upd = (id, logCommentInfo) => store.logComments.update(Number(id), logCommentInfo);\n\nconst all = (id) => store.logComments.where({ lid: Number(id) }).toArray();\n\nexport default {\n    get, add, del, upd, all\n}","import React, { useState, useEffect} from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Button } from '@blueprintjs/core';\nimport styles from './logCommentCreate.module.css';\nimport LogCommentEditor from 'component/logCommentEditor';\nimport AppFrame from 'component/appFrame';\nimport NormalNavigation from 'component/normalNavigator';\nimport logCommentService from 'service/logComment';\n\nexport default function LogCommentCreate() {\n    const params = useParams();\n    const { id = null, cid = null } = params;\n    const [ initState, setInitState ] = useState(false);\n    const [ isNew, setIsNew ] = useState(true);\n    const [ value, setValue ] = useState('');\n    const h = useHistory();\n\n    useEffect(() => {\n        (async function() {\n            if (!cid) {\n                setInitState(true);\n                return;\n            };\n            logCommentService.get(cid)\n                .then(m => {\n                    m && setValue(m.content);\n                    setIsNew(false);\n                })\n                .finally(() => {\n                    setInitState(true);\n                });\n        })();\n    }, [ cid ]);\n    return (\n        <AppFrame header={\n            <NormalNavigation showBack title=\"评论\" actions={\n                <Button minimal icon=\"confirm\" intent=\"primary\" onClick={() => {\n                    let process;\n                    if (isNew) {\n                        process = logCommentService.add(id, {\n                            content: value\n                        });\n                    } else {\n                        process = logCommentService.upd(cid, {\n                            content: value\n                        });\n                    }\n                    process.then(() => {\n                        h.goBack();\n                    }).catch(err => {\n                        alert(err.message);\n                    });\n                }}>提交</Button>\n            } />\n        }>\n            <div className={styles.container}>\n                {\n                    initState && <LogCommentEditor\n                        value={value}\n                        onChange={val => setValue(val)}\n                        placeholder=\"请从此出开始...\"\n                    />\n                }\n            </div>\n        </AppFrame>\n    );\n}\n","import React from 'react';\nimport styles from './index.module.css';\nimport { noop } from 'util/commonUtil';\nimport MarkdownEditor from 'component/markdownEditor';\n\nexport default function LogEditor(props) {\n    const { value = '', onChange = noop, placeholder = '', onConfirm = noop } = props;\n    return (\n        <div className={styles.container}>\n            <MarkdownEditor\n                value={value}\n                placeholder={placeholder}\n                onChange={val => onChange(val)}\n                onSubmit={() => onConfirm()}\n            />\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Button } from '@blueprintjs/core';\nimport styles from './logCreate.module.css';\nimport LogEditor from 'component/logEditor';\nimport AppFrame from 'component/appFrame';\nimport NormalNavigator from 'component/normalNavigator';\nimport logService from 'service/log';\nimport { AppToaster } from 'util/toaster';\n\nexport default function LogCreate() {\n    const h = useHistory();\n    const params = useParams();\n    const { id = null } = params;\n    const [ initState, setInitState ] = useState(false);\n    const [ isNew, setIsNew ] = useState(true);\n    const [ value, setValue ] = useState('');\n\n    useEffect(() => {\n        (async function() {\n            if (!id) {\n                setInitState(true);\n                return;\n            };\n            logService.get(id)\n                .then(m => {\n                    m && setValue(m.content);\n                    setIsNew(false);\n                })\n                .finally(() => {\n                    setInitState(true);\n                });\n        })();\n    }, [ id ]);\n    return (\n        <AppFrame header={\n            <NormalNavigator showBack actions={\n                <Button minimal intent=\"primary\" icon=\"confirm\" onClick={() => {\n                    let process;\n                    if (isNew) {\n                        process = logService.add({\n                            content: value\n                        });\n                    } else {\n                        process = logService.upd(id, {\n                            content: value\n                        });\n                    }\n                    process.then(() => {\n                        h.goBack();\n                    }).catch(err => {\n                        AppToaster.show({ timeout: 2000, message: err.message, intent: 'error' });\n                    });\n                }}>提交</Button>\n            } />\n        }>\n            <div className={styles.container}>\n                {\n                    initState && <LogEditor\n                        value={value}\n                        onChange={val => setValue(val)}\n                        placeholder=\"请由此开始...\"\n                    />\n                }\n            </div>\n        </AppFrame>\n    );\n}\n","import React from 'react';\nimport { Tooltip, Position } from '@blueprintjs/core';\nimport TimeAgo from 'timeago-react';\nimport dayjs from 'dayjs';\n\nexport default function(props) {\n    const { time = new Date(), showTooltip = true } = props;\n    return (\n        <Tooltip position={Position.TOP} disabled={!showTooltip} content={dayjs(time).format('YYYY.MM.DD HH:mm')} >\n            <TimeAgo datetime={time} locale='zh_CN' />\n        </Tooltip>\n    );\n}","/* eslint-disable jsx-a11y/anchor-is-valid  */\n\nimport React from 'react';\nimport styles from './index.module.css';\nimport names from 'classnames';\nimport { Classes, Icon, ButtonGroup, Button, Popover, Position, Divider } from '@blueprintjs/core';\nimport MarkdownPreview from 'component/markdownPreview';\nimport Ago from 'component/timeAgo';\nimport { noop } from 'util/commonUtil';\n\nfunction LogComment(props) {\n    const { comment: c, onRequestDelete = noop, onRequestUpdate = noop } = props;\n\n    return (\n        <div className={styles.comment} key={c.id}>\n            <div className={names(Classes.TEXT_MUTED, styles.commentMeta)}>\n                <div className={styles.commentMetaBlock}>\n                    <span className={styles.commentMetaItem}><Ago time={c.time} /></span>\n                </div>\n                <div className={names(styles.commentMetaBlock, styles.hoverVisible)}>\n                    <Popover content={\n                        <ButtonGroup>\n                            <Button minimal onClick={() => onRequestUpdate(c)}>编辑</Button>\n                            <Divider />\n                            <Button minimal intent=\"danger\" onClick={() => onRequestDelete(c.id)}>删除</Button>\n                        </ButtonGroup>\n                    } position={Position.TOP} interactionKind=\"hover\">\n                        <a\n                            className={names(\n                                styles.commentMetaItem,\n                                Classes.TEXT_MUTED,\n                                Classes.TEXT_SMALL\n                            )}\n                        >\n                            <Icon icon=\"more\" />\n                        </a>\n                    </Popover>\n                </div>\n            </div>\n            <div className={names(styles.commentContent, Classes.RUNNING_TEXT)}>\n                <MarkdownPreview source={c.content} />\n            </div>\n        </div>\n    );\n}\n\nexport default function LogComments(props) {\n    const { list = [], onRequestDelete, onRequestUpdate} = props;\n    return (\n        <div className={styles.comments}>\n            {\n                list.map(c => (\n                    <LogComment\n                        key={c.id}\n                        comment={c}\n                        onRequestDelete={onRequestDelete}\n                        onRequestUpdate={onRequestUpdate}\n                    />\n                ))\n            }\n        </div>\n    );\n}","\nconst REG = /(\\d+):(\\d+)-(\\d+):(\\d+)/;\n\nexport function sourcePosParse(sourcePosStr) {\n    const match = REG.exec(sourcePosStr);\n    if (!match) return null;\n    return {\n        startLine: Number(match[1]),\n        startIndex: Number(match[2]),\n        endLine: Number(match[3]),\n        endIndex: Number(match[4]),\n    }\n}\n\nexport function getRange(source, sourcePosStr) {\n    const sourceArr = source.split('\\n');\n    const sourcePos = sourcePosParse(sourcePosStr);\n    const range = {\n        from: sourceArr\n            .slice(0, sourcePos.startLine - 1)\n            .map(l => l.length)\n            .reduce((p, n) => p + n, 0) + (sourcePos.startLine - 1) + sourcePos.startIndex,\n        to: sourceArr\n            .slice(0, sourcePos.endLine - 1)\n            .map(l => l.length)\n            .reduce((p, n) => p + n, 0) + (sourcePos.endLine - 1) + sourcePos.endIndex,\n    };\n    return range;\n}\n\nexport function sliceCodeFromSource(source, sourcePosStr) {\n    const range = getRange(source, sourcePosStr);\n    return source.slice(range.from - 1, range.to - 1);\n}\nexport function replaceCodeFromSource(source, sourcePosStr, replacement) {\n    const range = getRange(source, sourcePosStr);\n    return source.slice(0, range.from - 1) + replacement + source.slice(range.to - 1);\n}","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport {\n    Button, Position, Popover, Menu, MenuItem, ButtonGroup\n} from '@blueprintjs/core';\nimport styles from './logDetail.module.css';\nimport AppFrame from 'component/appFrame';\nimport logService from 'service/log';\nimport logCommentService from 'service/logComment';\nimport LogComments from 'component/logComments';\nimport { AppToaster } from 'util/toaster';\nimport MarkdownPreview from 'component/markdownPreview';\nimport { sliceCodeFromSource, replaceCodeFromSource } from 'util/sourcePosUtil';\nimport names from 'classnames';\nimport Editor from 'component/logEditor';\n\n\nconst MODE = {\n    VIEW: '10001',\n    EDIT: '20001',\n    COMMENT: '30001',\n    APPEND: '40001',\n    COMMENT_EDIT: '50001',\n    PARTIAL_EDIT: '60001'\n};\n\nexport default function LogDetail() {\n    const h = useHistory();\n    const params = useParams();\n    const [logFlag, setLogFlag] = useState(false);\n    const [commentsFlag, setCommentsFlag] = useState(false);\n    const [logData, setLogData] = useState(null);\n    const [logCommentsData, setLogCommentsData] = useState([]);\n    const [editSource, setEditSource] = useState('');\n    const [commentRefId, setCommentRefId] = useState('');\n    const [posData, setPosData] = useState(null);\n    const [mode, setMode] = useState(MODE.VIEW);\n\n    useEffect(() => {\n        async function fetchData() {\n            const logInfo = await logService.get(params.id);\n            setLogData(logInfo);\n        }\n        fetchData();\n    }, [params.id, logFlag]);\n    useEffect(() => {\n        async function fetchData() {\n            const logCommentsInfo = await logCommentService.all(params.id);\n            setLogCommentsData(logCommentsInfo);\n        }\n        fetchData();\n    }, [params.id, commentsFlag]);\n\n    const viewAction = (\n        <Popover content={\n            <Menu>\n                <MenuItem\n                    icon=\"annotation\" text=\"Edit\"\n                    onClick={() => {\n                        setEditSource(logData.content);\n                        setMode(MODE.EDIT);\n                    }}\n                />\n                <MenuItem\n                    icon=\"add\" text=\"Append\"\n                    onClick={() => {\n                        setEditSource('');\n                        setMode(MODE.APPEND);\n                    }}\n                />\n                <MenuItem\n                    icon=\"comment\" text=\"Comment\"\n                    onClick={() => {\n                        setEditSource('');\n                        setCommentRefId('');\n                        setMode(MODE.COMMENT);\n                    }}\n                />\n                <Menu.Divider />\n                <MenuItem\n                    icon=\"delete\" intent=\"danger\" text=\"Delete\"\n                    onClick={() => {\n                        if (!window.confirm(\"Please confirm DELETE item.\")) return;\n                        logService.del(params.id)\n                            .then(() => {\n                                AppToaster.show({ timeout: 2000, message: '删除成功', intent: 'success' });\n                                h.goBack();\n                            })\n                            .catch(err => {\n                                alert(err.message);\n                            });\n                    }}\n                />\n            </Menu>\n        } position={Position.BOTTOM_RIGHT}>\n            <Button icon=\"cog\" text=\"Operation\" rightIcon=\"caret-down\" />\n        </Popover>\n    );\n    const editAction = (\n        <ButtonGroup>\n            <Button icon=\"undo\" text=\"Cancel\" onClick={() => {\n                setMode(MODE.VIEW);\n                setEditSource('');\n            }} />\n            <Button icon=\"confirm\" text=\"Confirm\" intent=\"primary\" onClick={() => {\n                logService.upd(params.id, {\n                    content: editSource\n                }).then(() => {\n                    setMode(MODE.VIEW);\n                    setEditSource('');\n                    setLogFlag(!logFlag);\n                });\n            }} />\n        </ButtonGroup>\n    );\n    const commentAction = (\n        <ButtonGroup>\n            <Button icon=\"undo\" text=\"Cancel\" onClick={() => {\n                setMode(MODE.VIEW);\n                setEditSource('');\n            }} />\n            <Button icon=\"confirm\" text=\"Confirm\" intent=\"primary\" onClick={() => {\n                logCommentService.add(params.id, {\n                    content: editSource\n                }).then(() => {\n                    setEditSource('');\n                    setCommentRefId('');\n                    setCommentsFlag(!commentsFlag);\n                    setMode(MODE.VIEW);\n                });\n            }} />\n        </ButtonGroup>\n    );\n    const appendAction = (\n        <ButtonGroup>\n            <Button icon=\"undo\" text=\"Cancel\" onClick={() => {\n                setMode(MODE.VIEW);\n                setEditSource('');\n            }} />\n            <Button icon=\"confirm\" text=\"Confirm\" intent=\"primary\" onClick={() => {\n                logService\n                    .upd(params.id, { content: logData.content + '\\n\\n' + editSource })\n                    .then(() => {\n                        setMode(MODE.VIEW);\n                        setEditSource('');\n                        setLogFlag(!logFlag);\n                    });\n            }} />\n        </ButtonGroup>\n    );\n    const commentEditAction = (\n        <ButtonGroup>\n            <Button icon=\"undo\" text=\"Cancel\" onClick={() => {\n                setMode(MODE.VIEW);\n                setEditSource('');\n                setCommentRefId('');\n            }} />\n            <Button icon=\"confirm\" text=\"Confirm\" intent=\"primary\" onClick={() => {\n                logCommentService\n                    .upd(commentRefId, { content: editSource })\n                    .then(() => {\n                        setMode(MODE.VIEW);\n                        setEditSource('');\n                        setCommentRefId('');\n                        setCommentsFlag(!commentsFlag);\n                    });\n            }} />\n        </ButtonGroup>\n    );\n    const partialEditAction = (\n        <ButtonGroup>\n            <Button icon=\"undo\" text=\"Cancel\" onClick={() => {\n                setMode(MODE.VIEW);\n                setEditSource('');\n                setCommentRefId('');\n            }} />\n            <Button icon=\"confirm\" text=\"Confirm\" intent=\"primary\" onClick={() => {\n                const source = replaceCodeFromSource(logData.content, posData, editSource);\n                logService\n                    .upd(params.id, { content: source })\n                    .then(() => {\n                        setMode(MODE.VIEW);\n                        setEditSource('');\n                        setLogFlag(!logFlag);\n                        setPosData(null);\n                    });\n            }} />\n        </ButtonGroup>\n    );\n    \n    return (\n        <AppFrame\n            actions={\n                (mode === MODE.APPEND && appendAction) ||\n                (mode === MODE.EDIT && editAction) ||\n                (mode === MODE.COMMENT && commentAction) ||\n                (mode === MODE.COMMENT_EDIT && commentEditAction) ||\n                (mode === MODE.PARTIAL_EDIT && partialEditAction) ||\n                viewAction\n            }\n        >\n            {\n                logData && logCommentsData &&\n                <div className={names(styles.container)}>\n                    <div className={styles.logContentBox}>\n                        <div className={styles.logContent}>\n                            <MarkdownPreview source={logData.content} selectAble onSelect={\n                                pos => {\n                                    const partial = sliceCodeFromSource(logData.content, pos);\n                                    setEditSource(partial);\n                                    setPosData(pos);\n                                    setMode(MODE.PARTIAL_EDIT);\n                                }\n                            } />\n                        </div>\n                    </div>\n                    <div className={styles.commentBox}>\n                        <div className={styles.commentContent}>\n                            <LogComments\n                                list={logCommentsData}\n                                onRequestUpdate={c => {\n                                    setEditSource(c.content);\n                                    setCommentRefId(c.id);\n                                    setMode(MODE.COMMENT_EDIT);\n                                }}\n                                onRequestDelete={cid => {\n                                    if (!window.confirm('Please confirm DELETE item.')) return;\n                                    logCommentService.del(cid)\n                                        .then(() => {\n                                            setCommentsFlag(!commentsFlag);\n                                        })\n                                        .catch(err => {\n                                            alert(err.message);\n                                        });\n                                }}\n                            />\n                        </div>\n                    </div>\n                </div>\n            }\n            {\n                mode !== MODE.VIEW && <div className={names(styles.editorOuter)}>\n                    <div className={styles.editorInner}>\n                        <Editor\n                            value={editSource}\n                            onChange={val => setEditSource(val)}\n                        />\n                    </div>\n                </div>\n            }\n        </AppFrame>\n    );\n}","import React from 'react';\nimport { HashRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport AliaPage from './page/alia';\nimport LogPage from './page/log';\nimport LogCommentCreatePage from './page/logCommentCreate';\nimport LogCreatePage from './page/logCreate';\nimport LogDetailPage from './page/logDetail';\nimport 'normalize.css';\nimport '@blueprintjs/core/lib/css/blueprint.css';\nimport '@blueprintjs/icons/lib/css/blueprint-icons.css';\nimport '@blueprintjs/datetime/lib/css/blueprint-datetime.css';\n// import 'github-markdown-css';\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/l/l\" component={LogPage} />\n                <Route path=\"/l/d/:id\" component={LogDetailPage} />\n                <Route path=\"/l/a/:text\" component={AliaPage} />\n                <Route path=\"/l/ce/:id?\" component={LogCreatePage} />\n                <Route path=\"/l/lc/ce/:id/:cid?\" component={LogCommentCreatePage} />\n                <Redirect to=\"/l/a/m\" />\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"logDetail_container__w0WFV\",\"logContentBox\":\"logDetail_logContentBox__2FBOS\",\"logContent\":\"logDetail_logContent__2q741\",\"commentBox\":\"logDetail_commentBox__2xmER\",\"commentContent\":\"logDetail_commentContent__2yOe-\",\"footerActions\":\"logDetail_footerActions__ax9Jf\",\"hide\":\"logDetail_hide__3XdPe\",\"editorOuter\":\"logDetail_editorOuter__1Gkc2\",\"editorInner\":\"logDetail_editorInner__37efe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"markdownBody\":\"markdownPreview_markdownBody__3D-P7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"appFrame_container__28Uto\",\"body\":\"appFrame_body__1wP9K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"logItem_container__1HQ_G\",\"metaBlock\":\"logItem_metaBlock__19X2m\",\"meta\":\"logItem_meta__JAOjF\",\"metaItem\":\"logItem_metaItem__37psE\",\"markdownBody\":\"logItem_markdownBody__1O-pH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"markdownEditor_container__1Bh7Q\",\"editorBox\":\"markdownEditor_editorBox__2jfkZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"normalNavigator_container__155OS\",\"content\":\"normalNavigator_content__3QptO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"alia_container__3sOFO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"log_container__1snyH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"logCommentCreate_container__3qGs1\"};"],"sourceRoot":""}