{"version":3,"sources":["component/logComments/index.module.css","component/appFrame/index.js","component/normalNavigator/index.js","store/index.js","service/log.js","service/textToIdMap.js","util/toaster.js","util/getUrlUtil.js","util/commonUtil.js","page/alia.js","component/markdownPreview/index.js","component/logItem/index.js","page/log.js","component/logCommentEditor/index.js","service/logComment.js","page/logCommentCreate.js","component/logEditor/index.js","page/logCreate.js","component/timeAgo/index.js","component/logComments/index.js","util/sourcePosUtil.js","component/normalFooter/index.js","component/markdownEditor/index.js","component/drawerEditor/index.js","page/logDetail.js","App.js","serviceWorker.js","index.js","page/logDetail.module.css","component/appFrame/index.module.css","component/markdownPreview/index.module.css","component/logItem/index.module.css","component/normalFooter/index.module.css","component/markdownEditor/index.module.css","page/alia.module.css","page/log.module.css","page/logCommentCreate.module.css","component/logCommentEditor/index.module.css","page/logCreate.module.css","component/logEditor/index.module.css"],"names":["module","exports","props","className","styles","container","header","body","children","footer","NormalNavigator","showBack","title","actions","h","useHistory","Classes","DARK","style","userSelect","width","margin","align","onClick","goBack","icon","minimal","db","Dexie","version","stores","logs","logComments","textToIdMap","window","id","store","get","Number","logInfo","add","time","Date","delete","update","orderBy","toArray","then","l","reverse","text","where","first","match","catch","lid","item","AppToaster","Toaster","create","position","Position","TOP","noop","delay","ms","Promise","resolve","setTimeout","createAndLink","a","success","t","logService","content","textToIdMapService","show","timeout","message","intent","createAndUpdateLink","Alia","params","useParams","isValidText","useState","isTextExist","setIsTextExist","isTextExistInit","setIsTextExistInit","isLogExist","setIsLogExist","isLogExistInit","setIsLogExistInit","isInit","useEffect","map","log","replace","getUrlUtil","validate","large","description","action","push","extra","MarkdownPreview","source","rsource","selectAble","m","p1","generatLinks","sepIdx","indexOf","slice","names","markdownBody","active","evt","onSelect","preventDefault","el","findTopLevelEle","target","HTMLElement","parentNode","classList","contains","pnode","parentElement","sourcePosStr","getAttribute","short","sourcePos","meta","TEXT_MUTED","TEXT_SMALL","datetime","date","locale","elevation","Elevation","ONE","interactive","Log","setlogs","list","fetch","key","LogCommentEditor","value","onChange","placeholder","fill","autoFocus","growVertically","logCommentInfo","LogCommentCreate","cid","initState","setInitState","isNew","setIsNew","setValue","logCommentService","finally","err","alert","val","LogEditor","LogCreate","showTooltip","disabled","dayjs","format","LogComment","c","comment","onRequestDelete","onRequestUpdate","commentMeta","commentMetaBlock","commentMetaItem","hoverVisible","interactionKind","commentContent","RUNNING_TEXT","LogComments","comments","REG","getRange","sourceArr","split","exec","startLine","startIndex","endLine","endIndex","sourcePosParse","from","length","reduce","p","n","to","noEffect","contentBox","onSubmit","editorBox","onKeyUp","keyCode","altKey","DrawerEditor","isOpen","onClose","onConfirm","hasBackdrop","BOTTOM","size","DRAWER_BODY","backgroundColor","height","padding","display","alignItems","DIALOG_CLOSE_BUTTON","NavigationActions","onAppendRequest","label","Divider","confirm","LogDetail","flag","setFlag","logData","setLogData","logCommentsData","setLogCommentsData","partialEdit","setPartialEdit","isOpenPartialDrawerEditor","setIsOpenPartialDrawerEditor","isOpenAppendDrawerEditor","setIsOpenAppendDrawerEditor","isOpenCommentDrawerEditor","setIsOpenCommentDrawerEditor","partialSource","setPartialSource","appendSource","setAppendSource","commentSource","setCommentSource","commentRefId","setCommentRefId","posData","setPosData","logCommentsInfo","fetchData","marginBottom","marginLeft","marginRight","checked","logContentBox","logContent","pos","partial","range","sliceCodeFromSource","commentBox","replacement","replaceCodeFromSource","App","path","component","LogPage","LogDetailPage","AliaPage","LogCreatePage","LogCommentCreatePage","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.96f558d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"logComments_comments__1LjH6\",\"comment\":\"logComments_comment__GP3sS\",\"commentTime\":\"logComments_commentTime__3ccqY\",\"commentMeta\":\"logComments_commentMeta__2p6gN\",\"commentMetaItem\":\"logComments_commentMetaItem__2-ZM7\"};","import React from 'react';\nimport styles from './index.module.css';\n\nexport default function(props) {\n    return (\n        <div className={styles.container}>\n            { props.header && <div className={styles.header}>{props.header}</div> }\n            <div className={styles.body}>{props.children}</div>\n            { props.footer && <div className={styles.footer}>{props.footer}</div> }\n        </div>\n    );\n}","\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n    Navbar, NavbarGroup, Button, NavbarHeading, NavbarDivider, Classes\n} from '@blueprintjs/core';\n\nexport default function NormalNavigator(props) {\n    const { showBack = false, title = '', actions = [] } = props;\n    const h = useHistory();\n    return (\n        <Navbar className={Classes.DARK} style={{ userSelect: 'none'}}>\n            <div style={{width: '640px', margin: 'auto'}}>\n                <NavbarGroup align=\"left\">\n                    {\n                        showBack && < >\n                            <Button\n                                onClick={() => h.goBack()}\n                                icon=\"chevron-left\"\n                                minimal\n                            >返回</Button>\n                            <NavbarDivider />\n                        </>\n                    }\n                    {\n                        title !== '' && <NavbarHeading>{title}</NavbarHeading>\n                    }\n                </NavbarGroup>\n                <NavbarGroup align=\"right\">\n                    {actions}\n                </NavbarGroup>\n            </div>\n        </Navbar>\n    );\n}","import Dexie from 'dexie';\n\nconst db = new Dexie('EfficientDatabase');\n\ndb.version(1).stores({\n    logs: '++id, content, time'\n});\n\ndb.version(2).stores({\n    logComments: '++id, content, time, lid'\n});\n\ndb.version(3).stores({\n    textToIdMap: '++id, &text, lid'\n});\n\nexport default db;\nwindow.db = db;","import store from 'store/index';\n\nconst get = (id) => store.logs.get(Number(id));\n\nconst add = (logInfo) => store.logs.add({...logInfo, time: new Date()});\n\nconst del = (id) => store.logs.delete(Number(id));\n\nconst upd = (id, logInfo) => store.logs.update(Number(id), logInfo);\n\nconst all = () => store.logs.orderBy('time').toArray().then(l => l.reverse());\n\nexport default {\n    get, add, del, upd, all\n}","import store from 'store/index';\n\nconst findMapByText = text => store\n    .textToIdMap\n    .where({text})\n    .first(match => match)\n    .catch(() => null);\n\nconst link = (text, lid) => store.textToIdMap.add({ text, lid });\nconst relink = (text, lid) => store.textToIdMap.where({ text }).first(item => store.textToIdMap.update(item.id, { lid }));\n\nexport default {\n    findMapByText,\n    link,\n    relink\n};","import { Position, Toaster } from \"@blueprintjs/core\";\n \n\nexport const AppToaster = Toaster.create({\n    className: \"recipe-toaster\",\n    position: Position.TOP\n});","\nexport default {\n    getLogUrl: () => `/l`,\n    getLogDetailUrl: (id) => `/l/d/${id}`,\n    getAliaUrl: text => `/l/a/${text}`,\n    getLogCreateUrl: (id = '') => `/l/ce/${id}`,\n    getLogCommentCreateUrl: (id, cid = '') => `/l/lc/ce/${id}/${cid}`\n}\n","\nexport const noop = () => false;\n\nexport const delay = ms => new Promise(resolve => {\n    setTimeout(resolve, ms);\n});","\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport AppFrame from 'component/appFrame';\nimport NormalNavigator from 'component/normalNavigator';\nimport logService from 'service/log';\nimport textToIdMapService from 'service/textToIdMap';\nimport styles from './alia.module.css';\nimport { Button, NonIdealState, Tag, Spinner } from '@blueprintjs/core';\nimport { AppToaster } from 'util/toaster';\nimport getUrlUtil from 'util/getUrlUtil';\nimport { delay } from 'util/commonUtil';\n\nconst createAndLink = async (text) => {\n    let success = true;\n    let lid;\n    let t = '';\n    if (text === 'm') { t = '美好的一天！' }\n    try {\n        lid = await logService.add({ content: t || text + '\\n---\\n' });\n        await textToIdMapService.link(text, lid);\n    } catch(err) {\n        AppToaster.show({ timeout: 2000, message: err.message, intent: 'danger' });\n        success = false;\n    }\n    return success ? lid : null;\n}\nconst createAndUpdateLink = async (text) => {\n    let success = true;\n    let lid;\n    let t = '';\n    if (text === 'm') { t = '美好的一天！' }\n    try {\n        lid = await logService.add({ content: t || text + '\\n---\\n' });\n        await textToIdMapService.relink(text, lid);\n    } catch(err) {\n        AppToaster.show({ timeout: 2000, message: err.message, intent: 'danger' });\n        success = false;\n    }\n    return success ? lid : null;\n}\n\nexport default function Alia() {\n    const TEXT_REG = /^\\S{1,100}$/;\n    const params = useParams();\n    const h = useHistory();\n    const { text = '' } = params;\n    const isValidText = text.match(TEXT_REG);\n    const [ isTextExist, setIsTextExist ] = useState(false);\n    const [ isTextExistInit, setIsTextExistInit ] = useState(false);\n    const [ isLogExist, setIsLogExist ] = useState(false);\n    const [ isLogExistInit, setIsLogExistInit ] = useState(false);\n    const isInit = isTextExistInit && isLogExistInit;\n\n    useEffect(() => {\n        async function validate() {\n            await delay(350);\n            const map = await textToIdMapService.findMapByText(text);\n            if (map) {\n                setIsTextExist(true);\n                const log = await logService.get(map.lid);\n                if (log) {\n                    setIsLogExist(true);\n                    h.replace(getUrlUtil.getLogDetailUrl(log.id));\n                    return;\n                }\n            }\n            setIsTextExistInit(true);\n            setIsLogExistInit(true);\n        }\n        validate();\n    }, [ text, h ]);\n\n    const title = <Tag intent=\"warning\" minimal large >{text}</Tag>;\n    let icon = '';\n    let description = '';\n    let action = null;\n\n    if (!isValidText) {\n        icon=\"error\";\n        description = \"格式不正确\";\n        action = null;\n    } else {\n        if (!isTextExist) {\n            icon = \"info-sign\";\n            description = \"此关键字尚未关联任何日志\";\n            action = <Button minimal onClick={() => createAndLink(text).then(lid => lid && h.replace(getUrlUtil.getLogDetailUrl(lid)))} intent=\"primary\">新建日志并关联</Button>;\n\n            if (text === 'm') {\n                icon = \"play\";\n                description = \"欢迎使用，开始创建你的第一篇日志吧！\";\n                action = <Button minimal onClick={() => createAndLink(text).then(lid => lid && h.replace(getUrlUtil.getLogDetailUrl(lid)))} intent=\"primary\">开启日志</Button>;\n            }\n        } else {\n            if (!isLogExist) {\n                icon = \"warning-sign\";\n                description = \"哎呀，首页的日志被删除了！\";\n                action = <Button minimal onClick={() => createAndUpdateLink(text).then(lid => lid && h.replace(getUrlUtil.getLogDetailUrl(lid)))} intent=\"primary\">新建日志并重新关联</Button>;\n\n                if (text === 'm') {\n                    icon = \"warning-sign\";\n                    description = \"日志消失了，重新关联吧！\";\n                    action = <Button minimal onClick={() => createAndUpdateLink(text).then(lid => lid && h.replace(getUrlUtil.getLogDetailUrl(lid)))} intent=\"primary\">新建日志并重新关联</Button>;\n                }\n            }\n        }\n    }\n\n    return (\n        <AppFrame header={\n            <NormalNavigator\n                showBack={text !== 'm'}\n                title={<Button minimal icon=\"home\" onClick={() => h.push(getUrlUtil.getLogUrl())}>日志首页</Button>}\n            />\n        }>\n            <div className={styles.container}>\n                {\n                    !isInit && <Spinner />\n                }\n                {\n                    isInit && <NonIdealState\n                        icon={icon}\n                        title={title}\n                        action={action}\n                        extra={description}\n                    >\n                    </NonIdealState>\n                }\n            </div>\n        </AppFrame>\n    );\n}\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport names from 'classnames';\nimport styles from './index.module.css';\n\nconst SEGMENT = '\\n---';\n\nfunction findTopLevelEle(target) {\n    if (!(target instanceof HTMLElement)) return null;\n    if (!(target.parentNode instanceof HTMLElement)) return null;\n    if (target.classList.contains(styles.markdownBody)) return null;\n    const pnode = target.parentElement;\n    if (pnode.classList.contains(styles.markdownBody)) {\n        return target;\n    }\n    return findTopLevelEle(pnode);\n}\nfunction generatLinks(source) {\n    return source.replace(/#([A-Za-z0-9_\\u4E00-\\u9FA5]{1,100})/g, (m, p1) => `[${m}](#/l/a/${p1})`);\n}\n\nexport default function MarkdownPreview(props) {\n    const { source: rsource = '', className, selectAble = false } = props;\n    const source = generatLinks(rsource);\n    const sepIdx = source.indexOf(SEGMENT);\n    const title = sepIdx > 0 ? source.slice(0, sepIdx) : '';\n    return (\n        <div\n            className={names(\n                \"markdown-body\",\n                className,\n                styles.markdownBody,\n                selectAble ? styles.active : ''\n            )}\n            onClick={evt => {\n                if (!props.selectAble || typeof props.onSelect !== 'function') return;\n                evt.preventDefault();\n                const el = findTopLevelEle(evt.target);\n                if (!el) return;\n                const sourcePosStr = el.getAttribute('data-sourcePos');\n                props.onSelect(sourcePosStr);\n            }}\n        >\n            <ReactMarkdown\n                source={props.short ? (title || source) : source}\n                sourcePos={selectAble}\n            />\n        </div>\n    );\n}","/* eslint-disable jsx-a11y/anchor-is-valid  */\n\nimport React from 'react';\nimport TimeAgo from 'timeago-react';\nimport { useHistory } from 'react-router-dom';\nimport { Card, Classes, Elevation } from '@blueprintjs/core';\nimport names from 'classnames';\nimport styles from './index.module.css';\nimport MarkdownPreview from 'component/markdownPreview';\nimport getUrlUtil from 'util/getUrlUtil';\n\nexport default function (props) {\n    const h = useHistory();\n    return (\n        <div className={styles.container}>\n            <div className={styles.meta}>\n                <span className={names(Classes.TEXT_MUTED, Classes.TEXT_SMALL)}>\n                    <TimeAgo datetime={props.date} locale='zh_CN' />\n                </span>\n            </div>\n            <Card elevation={Elevation.ONE} interactive onClick={() => h.push(getUrlUtil.getLogDetailUrl(props.id))}>\n                <div className={names(\"markdown-body\", styles.markdownBody)}>\n                    <MarkdownPreview source={props.children} short />\n                </div>\n            </Card>\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from '@blueprintjs/core';\nimport styles from './log.module.css';\nimport LogItem from 'component/logItem';\nimport AppFrame from 'component/appFrame';\nimport logService from 'service/log';\nimport NormalNavigator from 'component/normalNavigator';\nimport getUrlUtil from 'util/getUrlUtil';\n\nexport default function Log() {\n    const h = useHistory();\n    const [logs, setlogs] = useState([]);\n    useEffect(() => {\n        async function fetch() {\n            const list = await logService.all();\n            setlogs(list);\n        }\n        fetch();\n    }, []);\n    return (\n        <AppFrame header={\n            <NormalNavigator title=\"英雄·日志\" actions={\n                <Button\n                    minimal intent=\"primary\" icon=\"annotation\"\n                    onClick={() => h.push(getUrlUtil.getLogCreateUrl())}\n                >创建日志</Button>\n            } />\n        }>\n            <div className={styles.container}>\n                {\n                    logs.map(message => (\n                        <LogItem\n                            key={message.id}\n                            id={message.id}\n                            date={message.time}\n                        >{message.content}</LogItem>\n                    ))\n                }\n            </div>\n        </AppFrame>\n    );\n}\n","import React from 'react';\nimport { Card, TextArea } from '@blueprintjs/core';\nimport styles from './index.module.css';\nimport { noop } from 'util/commonUtil';\n\nexport default function LogCommentEditor (props) {\n    const { value = '', onChange = noop, placeholder = '' } = props;\n\n    return (\n        <div className={styles.container}>\n            <Card>\n                <TextArea\n                    fill\n                    large\n                    autoFocus\n                    value={value}\n                    growVertically\n                    placeholder={placeholder}\n                    onChange={evt => onChange(evt.target.value)}\n                />\n            </Card>\n        </div>\n    );\n}","import store from 'store/index';\n\nconst get = (id) => store.logComments.get(Number(id));\n\nconst add = (id, logCommentInfo) => store.logComments.add({...logCommentInfo, lid: Number(id), time: new Date()});\n\nconst del = (id) => store.logComments.delete(Number(id));\n\nconst upd = (id, logCommentInfo) => store.logComments.update(Number(id), logCommentInfo);\n\nconst all = (id) => store.logComments.where({ lid: Number(id) }).toArray();\n\nexport default {\n    get, add, del, upd, all\n}","import React, { useState, useEffect} from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Button } from '@blueprintjs/core';\nimport styles from './logCommentCreate.module.css';\nimport LogCommentEditor from 'component/logCommentEditor';\nimport AppFrame from 'component/appFrame';\nimport NormalNavigation from 'component/normalNavigator';\nimport logCommentService from 'service/logComment';\n\nexport default function LogCommentCreate() {\n    const params = useParams();\n    const { id = null, cid = null } = params;\n    const [ initState, setInitState ] = useState(false);\n    const [ isNew, setIsNew ] = useState(true);\n    const [ value, setValue ] = useState('');\n    const h = useHistory();\n\n    useEffect(() => {\n        (async function() {\n            if (!cid) {\n                setInitState(true);\n                return;\n            };\n            logCommentService.get(cid)\n                .then(m => {\n                    m && setValue(m.content);\n                    setIsNew(false);\n                })\n                .finally(() => {\n                    setInitState(true);\n                });\n        })();\n    }, [ cid ]);\n    return (\n        <AppFrame header={\n            <NormalNavigation showBack title=\"评论\" actions={\n                <Button minimal icon=\"confirm\" intent=\"primary\" onClick={() => {\n                    let process;\n                    if (isNew) {\n                        process = logCommentService.add(id, {\n                            content: value\n                        });\n                    } else {\n                        process = logCommentService.upd(cid, {\n                            content: value\n                        });\n                    }\n                    process.then(() => {\n                        h.goBack();\n                    }).catch(err => {\n                        alert(err.message);\n                    });\n                }}>提交</Button>\n            } />\n        }>\n            <div className={styles.container}>\n                {\n                    initState && <LogCommentEditor\n                        value={value}\n                        onChange={val => setValue(val)}\n                        placeholder=\"请从此出开始...\"\n                    />\n                }\n            </div>\n        </AppFrame>\n    );\n}\n","import React from 'react';\nimport { Card, TextArea } from '@blueprintjs/core';\nimport styles from './index.module.css';\nimport { noop } from 'util/commonUtil';\n\nexport default function LogEditor(props) {\n    const { value = '', onChange = noop, placeholder = '' } = props;\n    return (\n        <div className={styles.container}>\n            <Card>\n                <TextArea\n                    fill\n                    large\n                    autoFocus\n                    value={value}\n                    growVertically\n                    placeholder={placeholder}\n                    onChange={evt => onChange(evt.target.value)}\n                />\n            </Card>\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Button } from '@blueprintjs/core';\nimport styles from './logCreate.module.css';\nimport LogEditor from 'component/logEditor';\nimport AppFrame from 'component/appFrame';\nimport NormalNavigator from 'component/normalNavigator';\nimport logService from 'service/log';\nimport { AppToaster } from 'util/toaster';\n\nexport default function LogCreate() {\n    const h = useHistory();\n    const params = useParams();\n    const { id = null } = params;\n    const [ initState, setInitState ] = useState(false);\n    const [ isNew, setIsNew ] = useState(true);\n    const [ value, setValue ] = useState('');\n\n    useEffect(() => {\n        (async function() {\n            if (!id) {\n                setInitState(true);\n                return;\n            };\n            logService.get(id)\n                .then(m => {\n                    m && setValue(m.content);\n                    setIsNew(false);\n                })\n                .finally(() => {\n                    setInitState(true);\n                });\n        })();\n    }, [ id ]);\n    return (\n        <AppFrame header={\n            <NormalNavigator showBack title=\"编辑\" actions={\n                <Button minimal intent=\"primary\" icon=\"confirm\" onClick={() => {\n                    let process;\n                    if (isNew) {\n                        process = logService.add({\n                            content: value\n                        });\n                    } else {\n                        process = logService.upd(id, {\n                            content: value\n                        });\n                    }\n                    process.then(() => {\n                        h.goBack();\n                    }).catch(err => {\n                        AppToaster.show({ timeout: 2000, message: err.message, intent: 'error' });\n                    });\n                }}>提交</Button>\n            } />\n        }>\n            <div className={styles.container}>\n                {\n                    initState && <LogEditor\n                        value={value}\n                        onChange={val => setValue(val)}\n                        placeholder=\"请由此开始...\"\n                    />\n                }\n            </div>\n        </AppFrame>\n    );\n}\n","import React from 'react';\nimport { Tooltip, Position } from '@blueprintjs/core';\nimport TimeAgo from 'timeago-react';\nimport dayjs from 'dayjs';\n\nexport default function(props) {\n    const { time = new Date(), showTooltip = true } = props;\n    return (\n        <Tooltip position={Position.TOP} disabled={!showTooltip} content={dayjs(time).format('YYYY.MM.DD HH:mm')} >\n            <TimeAgo datetime={time} locale='zh_CN' />\n        </Tooltip>\n    );\n}","/* eslint-disable jsx-a11y/anchor-is-valid  */\n\nimport React from 'react';\nimport styles from './index.module.css';\nimport names from 'classnames';\nimport { Classes, Icon, ButtonGroup, Button, Popover, Position, Divider } from '@blueprintjs/core';\nimport MarkdownPreview from 'component/markdownPreview';\nimport Ago from 'component/timeAgo';\nimport { noop } from 'util/commonUtil';\n\nfunction LogComment(props) {\n    const { comment: c, onRequestDelete = noop, onRequestUpdate = noop } = props;\n\n    return (\n        <div className={styles.comment} key={c.id}>\n            <div className={names(Classes.TEXT_MUTED, styles.commentMeta)}>\n                <div className={styles.commentMetaBlock}>\n                    <span className={styles.commentMetaItem}><Ago time={c.time} /></span>\n                </div>\n                <div className={names(styles.commentMetaBlock, styles.hoverVisible)}>\n                    <Popover content={\n                        <ButtonGroup>\n                            <Button minimal onClick={() => onRequestUpdate(c)}>编辑</Button>\n                            <Divider />\n                            <Button minimal intent=\"danger\" onClick={() => onRequestDelete(c.id)}>删除</Button>\n                        </ButtonGroup>\n                    } position={Position.TOP} interactionKind=\"hover\">\n                        <a\n                            className={names(\n                                styles.commentMetaItem,\n                                Classes.TEXT_MUTED,\n                                Classes.TEXT_SMALL\n                            )}\n                        >\n                            <Icon icon=\"more\" />\n                        </a>\n                    </Popover>\n                </div>\n            </div>\n            <div className={names(styles.commentContent, Classes.RUNNING_TEXT)}>\n                <MarkdownPreview source={c.content} />\n            </div>\n        </div>\n    );\n}\n\nexport default function LogComments(props) {\n    const { list = [], onRequestDelete, onRequestUpdate} = props;\n    return (\n        <div className={styles.comments}>\n            {\n                list.map(c => (\n                    <LogComment\n                        key={c.id}\n                        comment={c}\n                        onRequestDelete={onRequestDelete}\n                        onRequestUpdate={onRequestUpdate}\n                    />\n                ))\n            }\n        </div>\n    );\n}","\nconst REG = /(\\d+):(\\d+)-(\\d+):(\\d+)/;\n\nexport function sourcePosParse(sourcePosStr) {\n    const match = REG.exec(sourcePosStr);\n    if (!match) return null;\n    return {\n        startLine: Number(match[1]),\n        startIndex: Number(match[2]),\n        endLine: Number(match[3]),\n        endIndex: Number(match[4]),\n    }\n}\n\nexport function getRange(source, sourcePosStr) {\n    const sourceArr = source.split('\\n');\n    const sourcePos = sourcePosParse(sourcePosStr);\n    const range = {\n        from: sourceArr\n            .slice(0, sourcePos.startLine - 1)\n            .map(l => l.length)\n            .reduce((p, n) => p + n, 0) + (sourcePos.startLine - 1) + sourcePos.startIndex,\n        to: sourceArr\n            .slice(0, sourcePos.endLine - 1)\n            .map(l => l.length)\n            .reduce((p, n) => p + n, 0) + (sourcePos.endLine - 1) + sourcePos.endIndex,\n    };\n    return range;\n}\n\nexport function sliceCodeFromSource(source, sourcePosStr) {\n    const range = getRange(source, sourcePosStr);\n    return source.slice(range.from - 1, range.to - 1);\n}\nexport function replaceCodeFromSource(source, sourcePosStr, replacement) {\n    const range = getRange(source, sourcePosStr);\n    return source.slice(0, range.from - 1) + replacement + source.slice(range.to - 1);\n}","\nimport React from 'react';\nimport styles from './index.module.css';\nimport names from 'classnames';\n\nexport default function NormalNavigator(props) {\n    const { noEffect = false } = props;\n    return (\n        <div className={names(styles.container, noEffect ? styles.noEffect : '')}>\n            <div className={styles.contentBox}>\n                { props.children }\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport styles from './index.module.css';\nimport { TextArea } from '@blueprintjs/core';\nimport { noop } from 'util/commonUtil';\n\nexport default function(props) {\n    const {\n        value = '',\n        onChange = noop,\n        onSubmit = noop,\n        placeholder = ''\n    } = props;\n    return (\n        <div className={styles.container}>\n            <div className={styles.editorBox}>\n                <TextArea\n                    fill large\n                    autoFocus\n                    value={value}\n                    growVertically\n                    placeholder={placeholder}\n                    onChange={evt => onChange(evt.target.value)}\n                    onKeyUp={evt => evt.keyCode === 13 && evt.altKey === true && onSubmit()}\n                />\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport MarkdownEditor from 'component/markdownEditor';\nimport { noop } from 'util/commonUtil';\nimport { Drawer, Position, Classes, Button} from '@blueprintjs/core';\n\nexport default function DrawerEditor(props) {\n    const {\n        isOpen = false,\n        onClose = noop,\n        value = '',\n        onChange = noop,\n        onConfirm = noop,\n        title = ''\n    } = props;\n    return (\n        <Drawer\n            icon=\"annotation\"\n            autoFocus\n            hasBackdrop={false}\n            isOpen={isOpen}\n            position={Position.BOTTOM}\n            size=\"100%\"\n            onClose={onClose}\n            onConfirm={onConfirm}\n            title={title}\n        >\n            <div\n                className={Classes.DRAWER_BODY}\n                style={{ backgroundColor: '#ebf1f5', height: '100%' }}\n            >\n                <div style={{padding: '20px 0'}}>\n                    <MarkdownEditor\n                        value={value}\n                        onChange={val => onChange(val)}\n                        onSubmit={() => onConfirm()}\n                    />\n                </div>\n                <div className=\"\">\n                    <div style={{\n                        display: 'flex',\n                        width: 640,\n                        margin: 'auto',\n                        alignItems: 'center'\n                    }}>\n                        <Button\n                            icon=\"confirm\"\n                            intent=\"primary\"\n                            className={Classes.DIALOG_CLOSE_BUTTON}\n                            onClick={onConfirm}\n                        >\n                            提交\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </Drawer>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport {\n    Button, Classes, Switch, Position, Code, Popover, Menu, MenuItem, NavbarDivider\n} from '@blueprintjs/core';\nimport styles from './logDetail.module.css';\nimport AppFrame from 'component/appFrame';\nimport logService from 'service/log';\nimport logCommentService from 'service/logComment';\nimport LogComments from 'component/logComments';\nimport { AppToaster } from 'util/toaster';\nimport MarkdownPreview from 'component/markdownPreview';\nimport { sliceCodeFromSource, replaceCodeFromSource } from 'util/sourcePosUtil';\nimport NormalNavigator from 'component/normalNavigator';\nimport NormalFooter from 'component/normalFooter';\nimport getUrlUtil from 'util/getUrlUtil';\nimport Ago from 'component/timeAgo';\nimport DrawerEditor from 'component/drawerEditor';\nimport { noop } from 'util/commonUtil';\n\nconst NavigationActions = (props) => {\n    const h = useHistory();\n    const params = useParams();\n    const { onAppendRequest = noop } = props;\n    return (\n        < >\n            <Popover content={\n                <Menu>\n                    <MenuItem\n                        icon=\"add\" text=\"追加片段\" label={<><Code>⌘</Code> + <Code>a</Code></>}\n                        onClick={onAppendRequest}\n                    />\n                    <MenuItem\n                        icon=\"annotation\" text=\"编辑片段\" label={<><Code>⌘</Code> + <Code>e</Code></>}\n                        onClick={() => h.push(getUrlUtil.getLogCreateUrl(params.id))}\n                    />\n                    <Menu.Divider />\n                    <MenuItem\n                        icon=\"delete\" intent=\"danger\" text=\"删除日志\" label={<><Code>⌘</Code> + <Code>d</Code></>}\n                        onClick={() => {\n                            if (!window.confirm(\"确认删除？\")) return;\n                            logService.del(params.id)\n                                .then(() => {\n                                    AppToaster.show({ timeout: 2000, message: '删除成功', intent: 'success' });\n                                    h.goBack();\n                                })\n                                .catch(err => {\n                                    alert(err.message);\n                                });\n                        }}\n                    />\n                </Menu>\n            } position={Position.BOTTOM}>\n                <Button icon=\"cog\" />\n            </Popover>\n        </>\n    );\n};\n\nexport default function LogDetail() {\n    const params = useParams();\n    const h = useHistory();\n    const [flag, setFlag] = useState(false);\n    const [logData, setLogData] = useState(null);\n    const [logCommentsData, setLogCommentsData] = useState([]);\n    const [partialEdit, setPartialEdit] = useState(false);\n    const [isOpenPartialDrawerEditor, setIsOpenPartialDrawerEditor] = useState(false);\n    const [isOpenAppendDrawerEditor, setIsOpenAppendDrawerEditor] = useState(false);\n    const [isOpenCommentDrawerEditor, setIsOpenCommentDrawerEditor] = useState(false);\n    const [partialSource, setPartialSource] = useState('');\n    const [appendSource, setAppendSource] = useState('');\n    const [commentSource, setCommentSource] = useState('');\n    const [commentRefId, setCommentRefId] = useState('');\n    const [posData, setPosData] = useState(null);\n\n    useEffect(() => {\n        async function fetchData() {\n            const logInfo = await logService.get(params.id);\n            const logCommentsInfo = await logCommentService.all(params.id);\n            setLogData(logInfo);\n            setLogCommentsData(logCommentsInfo);\n        }\n        fetchData();\n    }, [params.id, flag]);\n    return (\n        <AppFrame\n            header={\n                <NormalNavigator\n                    showBack\n                    title={<Button icon=\"home\" onClick={() => h.push(getUrlUtil.getLogUrl())}>日志首页</Button>}\n                    actions={\n                        < >\n                        <NavigationActions onAppendRequest={() => setIsOpenAppendDrawerEditor(true)} />\n                        <NavbarDivider />\n                        <Switch style={{ marginBottom: 0, marginLeft: 5, marginRight: 5 }}\n                            label={<span>编辑</span>} checked={partialEdit} onChange={() => setPartialEdit(!partialEdit)}/>\n                        </>\n                    }\n                />\n            }\n        >\n            <div className={styles.container}>\n                <div className={styles.logContentBox}>\n                    <div className={styles.logContent}>\n                        {\n                            logData && <MarkdownPreview source={logData.content} selectAble={partialEdit} onSelect={\n                                pos => {\n                                    const partial = sliceCodeFromSource(logData.content, pos);\n                                    setIsOpenPartialDrawerEditor(true);\n                                    setPartialSource(partial);\n                                    setPosData(pos);\n                                }\n                            } />\n                        }\n                    </div>\n                </div>\n                <NormalFooter>\n                    <div className={Classes.TEXT_MUTED}>\n                        日志创建于 {logData && <Ago time={logData.time} />}\n                    </div>\n                    <div className={Classes.TEXT_MUTED}>\n                        <span>累计 {logCommentsData ? logCommentsData.length : 0} 评论</span>\n                    </div>\n                </NormalFooter>\n                <div className={styles.commentBox}>\n                    <div className={styles.commentContent}>\n                        <LogComments\n                            list={logCommentsData}\n                            onRequestUpdate={c => {\n                                setCommentSource(c.content);\n                                setIsOpenCommentDrawerEditor(true);\n                                setCommentRefId(c.id);\n                            }}\n                            onRequestDelete={cid => {\n                                if (!window.confirm('你确定将此条记录删除吗？')) return;\n                                logCommentService.del(cid)\n                                    .then(() => {\n                                        AppToaster.show({\n                                            timeout: 2000,\n                                            message: '删除成功',\n                                            intent: 'success'\n                                        });\n                                        setFlag(!flag);\n                                    })\n                                    .catch(err => {\n                                        alert(err.message);\n                                    });\n                            }}\n                        />\n                    </div>\n                </div>\n                <NormalFooter noEffect>\n                    <Button\n                        icon=\"comment\"\n                        onClick={() => {\n                            setCommentSource('');\n                            setIsOpenCommentDrawerEditor(true);\n                            setCommentRefId('');\n                        }}\n                    >添加评论</Button>\n                </NormalFooter>\n            </div>\n            <DrawerEditor\n                title=\"编辑片段\"\n                isOpen={isOpenPartialDrawerEditor}\n                onClose={() => {\n                    setIsOpenPartialDrawerEditor(false);\n                }}\n                onConfirm={() => {\n                    setIsOpenPartialDrawerEditor(false);\n                    const source = replaceCodeFromSource(logData.content, posData, partialSource);\n                    logService\n                        .upd(logData.id, { content: source })\n                        .then(() => {\n                            setFlag(!flag);\n                            setPartialEdit(false);\n                        });\n                }}\n                value={partialSource}\n                onChange={val => setPartialSource(val)}\n            />\n            <DrawerEditor\n                title=\"追加片段\"\n                isOpen={isOpenAppendDrawerEditor}\n                onClose={() => {\n                    setIsOpenAppendDrawerEditor(false);\n                }}\n                onConfirm={() => {\n                    setIsOpenAppendDrawerEditor(false);\n                    debugger\n                    logService\n                        .upd(logData.id, { content: logData.content + '\\n\\n' + appendSource })\n                        .then(() => {\n                            setFlag(!flag);\n                            setPartialEdit(false);\n                        });\n                }}\n                value={appendSource}\n                onChange={val => setAppendSource(val)}\n            />\n            <DrawerEditor\n                title={`${commentRefId ? '修改' : '发布'}评论`}\n                isOpen={isOpenCommentDrawerEditor}\n                onClose={() => {\n                    setIsOpenCommentDrawerEditor(false);\n                }}\n                onConfirm={() => {\n                    setIsOpenCommentDrawerEditor(false);\n                    let process;\n                    if (commentRefId) {\n                        process = logCommentService\n                        .upd(commentRefId, { content: commentSource });\n                    } else {\n                        process = logCommentService\n                        .add(logData.id, { content: commentSource });\n                    }\n                    process\n                        .then(() => {\n                            setFlag(!flag);\n                        });\n                }}\n                value={commentSource}\n                onChange={val => setCommentSource(val)}\n            />\n        </AppFrame>\n    );\n}","import React from 'react';\nimport { HashRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport AliaPage from './page/alia';\nimport LogPage from './page/log';\nimport LogCommentCreatePage from './page/logCommentCreate';\nimport LogCreatePage from './page/logCreate';\nimport LogDetailPage from './page/logDetail';\nimport 'normalize.css';\nimport '@blueprintjs/core/lib/css/blueprint.css';\nimport '@blueprintjs/icons/lib/css/blueprint-icons.css';\nimport 'github-markdown-css';\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/l/l\" component={LogPage} />\n                <Route path=\"/l/d/:id\" component={LogDetailPage} />\n                <Route path=\"/l/a/:text\" component={AliaPage} />\n                <Route path=\"/l/ce/:id?\" component={LogCreatePage} />\n                <Route path=\"/l/lc/ce/:id/:cid?\" component={LogCommentCreatePage} />\n                <Redirect to=\"/l/a/m\" />\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"logDetail_container__w0WFV\",\"logContentBox\":\"logDetail_logContentBox__2FBOS\",\"logContent\":\"logDetail_logContent__2q741\",\"meta\":\"logDetail_meta__IpNSK\",\"commentBox\":\"logDetail_commentBox__2xmER\",\"commentContent\":\"logDetail_commentContent__2yOe-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"appFrame_container__28Uto\",\"header\":\"appFrame_header__VXnlL\",\"body\":\"appFrame_body__1wP9K\",\"footer\":\"appFrame_footer__PUQHy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"markdownBody\":\"markdownPreview_markdownBody__3D-P7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"logItem_container__1HQ_G\",\"metaBlock\":\"logItem_metaBlock__19X2m\",\"meta\":\"logItem_meta__JAOjF\",\"metaItem\":\"logItem_metaItem__37psE\",\"markdownBody\":\"logItem_markdownBody__1O-pH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"normalFooter_container__2xSTl\",\"noEffect\":\"normalFooter_noEffect__-tjOV\",\"contentBox\":\"normalFooter_contentBox__26-6D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"markdownEditor_container__1Bh7Q\",\"editorBox\":\"markdownEditor_editorBox__2jfkZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"alia_container__3sOFO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"log_container__1snyH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"logCommentCreate_container__3qGs1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"logCommentEditor_textarea__ltzcQ\",\"container\":\"logCommentEditor_container__3s0iH\",\"buttonWrap\":\"logCommentEditor_buttonWrap__o5tot\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"logCreate_container__19vSt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"logEditor_textarea__28vya\",\"container\":\"logEditor_container__1GeHV\",\"buttonWrap\":\"logEditor_buttonWrap__1W5No\"};"],"sourceRoot":""}