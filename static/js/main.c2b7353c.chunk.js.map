{"version":3,"sources":["page sync nonrecursive //.js$","App.js","serviceWorker.js","index.js","component/logAppender/index.js","page/appender.js","component/logItem/index.js","page/demo.js","component/appFrame/index.module.css","store/index.js","component/appFrame/index.js","component/logAppender/index.module.css","page/index.js","component/logItem/index.module.css","page/appender.module.css","page/demo.module.css"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","App","pages","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","LogAppender","props","useState","value","setValue","className","styles","container","elevation","Elevation","TWO","interactive","placeholder","onChange","evt","target","textarea","buttonWrap","intent","onClick","store","logMessages","add","time","Date","content","href","catch","err","alert","message","handleSubmit","Navigatior","h","useHistory","Classes","DARK","align","replace","icon","minimal","component","header","path","meta","names","TEXT_MUTED","TEXT_SMALL","datetime","date","locale","RUNNING_TEXT","children","push","setLogMessages","useEffect","a","orderBy","toArray","list","reverse","fetch","footer","key","db","Dexie","version","stores","body","routes","pageCtx","require","forEach","route"],"mappings":"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","file":"static/js/main.c2b7353c.chunk.js","sourcesContent":["var map = {\n\t\"./appender.js\": 159,\n\t\"./demo.js\": 160,\n\t\"./index.js\": 37\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 124;","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport pages from './page';\nimport 'normalize.css';\nimport '@blueprintjs/core/lib/css/blueprint.css';\nimport '@blueprintjs/icons/lib/css/blueprint-icons.css';\n\nfunction App() {\n  return (\n    <Router>\n      {pages}\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from 'react';\nimport { Button, Card, Elevation } from '@blueprintjs/core';\nimport styles from './index.module.css';\nimport store from 'store';\n\nfunction handleSubmit(value) {\n    store.logMessages.add({\n        time: new Date(),\n        content: value\n    }).then(() => {\n        window.location.href = '#/log.list';\n    }).catch(err => {\n        alert(err.message);\n    })\n}\n\nexport default function LogAppender (props) {\n    const [value, setValue] = useState('');\n    return (\n        <div className={styles.container}>\n            <Card elevation={Elevation.TWO} interactive>\n                <textarea placeholder=\"在此开始...\" value={value} onChange={evt => setValue(evt.target.value)} className={styles.textarea}></textarea>\n                <div className={styles.buttonWrap}>\n                    <Button intent=\"primary\" onClick={() => handleSubmit(value)}>提交</Button>\n                </div>\n            </Card>\n        </div>\n    );\n}","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n    Navbar, NavbarGroup, NavbarDivider, NavbarHeading, Button, Classes\n} from '@blueprintjs/core';\nimport styles from './appender.module.css';\nimport LogAppender from 'component/logAppender';\nimport AppFrame from 'component/appFrame';\n\nfunction Navigatior() {\n    const h = useHistory();\n    return (\n        <Navbar className={Classes.DARK}>\n            <NavbarGroup align=\"left\">\n                <Button\n                    onClick={() => h.replace('/log.list')}\n                    icon=\"chevron-left\"\n                    minimal\n                >返回日志</Button>\n                <NavbarDivider />\n                <NavbarHeading><small>记住每个精彩瞬间！</small></NavbarHeading>\n            </NavbarGroup>\n        </Navbar>\n    );\n}\n\nfunction Appender() {\n    return (\n        <AppFrame header={<Navigatior />}>\n            <div className={styles.container}>\n                <LogAppender />\n            </div>\n        </AppFrame>\n    );\n}\n\nexport const component = Appender;\nexport const path = '/log.create';","import React from 'react';\nimport TimeAgo from 'timeago-react';\nimport { Card, Elevation, Classes } from '@blueprintjs/core';\nimport names from 'classnames';\nimport styles from './index.module.css';\n\nexport default function (props) {\n    return (\n        <div className={styles.container}>\n            <div className={styles.meta}>\n                <span className={names(Classes.TEXT_MUTED, Classes.TEXT_SMALL)}>\n                    <TimeAgo datetime={props.date} locale='zh_CN' />\n                </span>\n            </div>\n            <Card elevation={Elevation.TWO} interactive>\n                <span className={Classes.RUNNING_TEXT}>{props.children}</span>\n            </Card>\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n    Navbar, NavbarGroup, NavbarDivider, NavbarHeading, Button, Classes\n} from '@blueprintjs/core';\nimport store from 'store/index';\nimport styles from './demo.module.css';\nimport LogItem from 'component/logItem';\nimport AppFrame from 'component/appFrame';\n\nfunction Navigatior() {\n    const h = useHistory();\n    return (\n        <Navbar className={Classes.DARK}>\n            <NavbarGroup align=\"left\">\n                <NavbarHeading>记住每个精彩瞬间！</NavbarHeading>\n            </NavbarGroup>\n            <NavbarGroup align=\"right\">\n                <Button onClick={() => h.push('/log.create')} icon=\"add\">创建记录</Button>\n            </NavbarGroup>\n        </Navbar>\n    );\n}\n\nfunction Demo() {\n    const [logMessages, setLogMessages] = useState([]);\n    useEffect(() => {\n        async function fetch() {\n            const list = await store.logMessages.orderBy('time').toArray();\n            setLogMessages(list.reverse());\n        }\n        fetch();\n    }, []);\n    return (\n        <AppFrame header={<Navigatior />} footer={<span>草木皆兵</span>}>\n            <div className={styles.container}>\n                { logMessages.map(message => (\n                    <LogItem key={message.id} date={message.time}>{message.content}</LogItem>\n                ))}\n            </div>\n        </AppFrame>\n    );\n}\n\nexport const component = Demo;\nexport const path = '/log.list';","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"appFrame_container__28Uto\",\"header\":\"appFrame_header__VXnlL\",\"body\":\"appFrame_body__1wP9K\",\"footer\":\"appFrame_footer__PUQHy\"};","import Dexie from 'dexie';\n\nconst db = new Dexie('EfficientDatabase');\n\ndb.version(2).stores({\n    logMessages: '++id, content, time'\n});\n\nexport default db;","import React from 'react';\nimport styles from './index.module.css';\n\nexport default function(props) {\n    return (\n        <div className={styles.container}>\n            { props.header && <div className={styles.header}>{props.header}</div> }\n            <div className={styles.body}>{props.children}</div>\n            { props.footer && <div className={styles.footer}>{props.footer}</div> }\n        </div>\n    );\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"logAppender_textarea__2gBDQ\",\"container\":\"logAppender_container__33MaX\",\"buttonWrap\":\"logAppender_buttonWrap__3bQie\"};","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nconst routes = [];\nconst pageCtx = require.context('.', false, /\\.js$/);\n\npageCtx.keys().forEach(key => {\n    if (key === './index.js') return;\n    const route = pageCtx(key);\n    routes.push(<Route {...route} key={key} />);\n});\n\nexport default routes;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"logItem_container__1HQ_G\",\"meta\":\"logItem_meta__JAOjF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"appender_container__TAWgS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"demo_container__3HD1h\"};"],"sourceRoot":""}