{"version":3,"sources":["page sync nonrecursive //.js$","page/alia.js","store/index.js","component/logComments/index.module.css","util/commonUtil.js","component/logComments/index.js","util/sourcePosUtil.js","component/markdownEditor/index.js","page/logDetail.js","App.js","serviceWorker.js","index.js","component/logItem/index.js","page/log.js","component/logCommentEditor/index.js","page/logCommentCreate.js","component/logEditor/index.js","page/logCreate.js","util/toaster.js","component/appFrame/index.js","component/normalNavigator/index.js","service/log.js","service/logComment.js","component/markdownPreview/index.js","page/logDetail.module.css","component/appFrame/index.module.css","component/logItem/index.module.css","component/markdownPreview/index.module.css","page/index.js","component/markdownEditor/index.module.css","page/log.module.css","page/logCommentCreate.module.css","component/logCommentEditor/index.module.css","page/logCreate.module.css","component/logEditor/index.module.css"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","component","path","db","Dexie","version","stores","logs","logComments","textToIdMap","window","noop","LogComment","props","h","useHistory","c","comment","useState","visible","setVisible","isOpen","setIsOpen","className","styles","key","cancelButtonText","confirmButtonText","icon","intent","Intent","DANGER","onCancel","onConfirm","logCommentService","del","then","AppToaster","show","timeout","message","catch","err","alert","names","Classes","TEXT_MUTED","commentMeta","commentMetaBlock","commentMetaItem","datetime","time","locale","hoverVisible","TEXT_SMALL","onClick","push","commentContent","RUNNING_TEXT","source","content","LogComments","comments","list","REG","getRange","sourcePosStr","sourceArr","split","sourcePos","match","exec","startLine","Number","startIndex","endLine","endIndex","sourcePosParse","from","slice","l","length","reduce","p","n","to","value","onChange","placeholder","container","editorBox","fill","large","growVertically","evt","target","PartialEditDrawer","onClose","autoFocus","hasBackdrop","position","Position","BOTTOM","size","Drawer","SIZE_LARGE","DRAWER_BODY","style","backgroundColor","height","DIALOG_HEADER","display","width","margin","alignItems","minimal","DIALOG_CLOSE_BUTTON","DIALOG_BODY","val","NavigationActions","params","useParams","children","confirm","logService","goBack","flag","setFlag","logData","setLogData","logCommentsData","setLogCommentsData","partialEdit","setPartialEdit","isOpenPartialEditDrawer","setIsOpenPartialEditDrawer","partialSource","setPartialSource","posData","setPosData","useEffect","a","get","logInfo","all","logCommentsInfo","fetchData","header","showBack","title","actions","marginBottom","marginLeft","marginRight","label","checked","logContentBox","logContent","selectAble","onSelect","pos","partial","range","sliceCodeFromSource","commentBox","replacement","replaceCodeFromSource","upd","App","pages","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","meta","date","elevation","Elevation","ONE","interactive","markdownBody","short","setlogs","fetch","exact","LogCommentEditor","cid","initState","setInitState","isNew","setIsNew","setValue","m","finally","add","Date","LogEditor","store","update","Toaster","create","TOP","body","footer","NormalNavigator","userSelect","align","delete","orderBy","toArray","reverse","logCommentInfo","lid","where","MarkdownPreview","sepIdx","indexOf","active","findTopLevelEle","HTMLElement","parentNode","pnode","parentElement","classList","contains","getAttribute","routes","pageCtx","require","forEach","route"],"mappings":"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","file":"static/js/main.059ae8a5.chunk.js","sourcesContent":["var map = {\n\t\"./alia.js\": 149,\n\t\"./index.js\": 64,\n\t\"./log.js\": 265,\n\t\"./logCommentCreate.js\": 266,\n\t\"./logCreate.js\": 267,\n\t\"./logDetail.js\": 263\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 148;","\n\n\nfunction Log() {\n\n    return null;\n}\n\nexport const component = Log;\nexport const path = '/alia/:text';","import Dexie from 'dexie';\n\nconst db = new Dexie('EfficientDatabase');\n\ndb.version(1).stores({\n    logs: '++id, content, time'\n});\n\ndb.version(2).stores({\n    logComments: '++id, content, time, lid'\n});\n\ndb.version(3).stores({\n    textToIdMap: '++id, &text, id'\n});\n\nexport default db;\nwindow.db = db;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"logComments_comments__1LjH6\",\"comment\":\"logComments_comment__GP3sS\",\"hoverVisible\":\"logComments_hoverVisible__3EWGe\",\"commentTime\":\"logComments_commentTime__3ccqY\",\"commentMeta\":\"logComments_commentMeta__2p6gN\",\"commentMetaItem\":\"logComments_commentMetaItem__2-ZM7\"};","\nexport const noop = () => false;","/* eslint-disable jsx-a11y/anchor-is-valid  */\n\nimport React, { useState } from 'react';\nimport styles from './index.module.css';\nimport names from 'classnames';\nimport { Classes, Alert, Intent } from '@blueprintjs/core';\nimport TimeAgo from 'timeago-react';\nimport { useHistory } from 'react-router-dom';\nimport { AppToaster } from 'util/toaster';\nimport logCommentService from 'service/logComment';\nimport MarkdownPreview from 'component/markdownPreview';\n\nfunction LogComment(props) {\n    const h = useHistory();\n    const { comment: c, id } = props;\n    const [ visible, setVisible ] = useState(true);\n    const [ isOpen, setIsOpen ] = useState(false);\n    return (\n        visible && <div className={styles.comment} key={c.id}>\n            <Alert\n                cancelButtonText=\"取消\"\n                confirmButtonText=\"确定删除\"\n                icon=\"trash\"\n                intent={Intent.DANGER}\n                isOpen={isOpen}\n                onCancel={() => setIsOpen(false)}\n                onConfirm={() => {\n                    setIsOpen(false);\n                    logCommentService.del(c.id)\n                        .then(() => {\n                            setVisible(false);\n                            AppToaster.show({ timeout: 2000, message: '删除成功', intent: 'success' });\n                        })\n                        .catch(err => {\n                            alert(err.message);\n                        });\n                }}\n            >\n                你确定将此条记录删除吗？ 删除后无法再次找回，请确认操作。\n            </Alert>\n            <div className={names(Classes.TEXT_MUTED, styles.commentMeta)}>\n                <div className={styles.commentMetaBlock}>\n                    <span className={styles.commentMetaItem}><TimeAgo datetime={c.time} locale='zh_CN' /></span>\n                </div>\n                <div className={names(styles.commentMetaBlock, styles.hoverVisible)}>\n                    <a\n                        className={names(\n                            styles.commentMetaItem,\n                            Classes.TEXT_MUTED,\n                            Classes.TEXT_SMALL\n                        )}\n                        onClick={() => h.push(`/log.comment.createOrEdit/${id}/${c.id}`)}\n                    >\n                        修改\n                    </a>\n                    <a\n                        className={names(\n                            styles.commentMetaItem,\n                            Classes.TEXT_MUTED,\n                            Classes.TEXT_SMALL\n                        )}\n                        onClick={() => setIsOpen(true) }\n                    >\n                        删除\n                    </a>\n                </div>\n            </div>\n            <div className={names(styles.commentContent, Classes.RUNNING_TEXT)}>\n                <MarkdownPreview source={c.content} />\n            </div>\n        </div>\n    );\n}\n\nexport default function LogComments(props) {\n    return (\n        <div className={styles.comments}>\n            {\n                props.list && props.list.map(c => (\n                    <LogComment key={c.id} comment={c} id={props.id} />\n                ))\n            }\n        </div>\n    );\n}","\nconst REG = /(\\d+):(\\d+)-(\\d+):(\\d+)/;\n\nexport function sourcePosParse(sourcePosStr) {\n    const match = REG.exec(sourcePosStr);\n    if (!match) return null;\n    return {\n        startLine: Number(match[1]),\n        startIndex: Number(match[2]),\n        endLine: Number(match[3]),\n        endIndex: Number(match[4]),\n    }\n}\n\nexport function getRange(source, sourcePosStr) {\n    const sourceArr = source.split('\\n');\n    const sourcePos = sourcePosParse(sourcePosStr);\n    const range = {\n        from: sourceArr\n            .slice(0, sourcePos.startLine - 1)\n            .map(l => l.length)\n            .reduce((p, n) => p + n, 0) + (sourcePos.startLine - 1) + sourcePos.startIndex,\n        to: sourceArr\n            .slice(0, sourcePos.endLine - 1)\n            .map(l => l.length)\n            .reduce((p, n) => p + n, 0) + (sourcePos.endLine - 1) + sourcePos.endIndex,\n    };\n    return range;\n}\n\nexport function sliceCodeFromSource(source, sourcePosStr) {\n    const range = getRange(source, sourcePosStr);\n    return source.slice(range.from - 1, range.to - 1);\n}\nexport function replaceCodeFromSource(source, sourcePosStr, replacement) {\n    const range = getRange(source, sourcePosStr);\n    return source.slice(0, range.from - 1) + replacement + source.slice(range.to - 1);\n}","import React from 'react';\nimport styles from './index.module.css';\nimport { TextArea } from '@blueprintjs/core';\nimport { noop } from 'util/commonUtil';\n\nexport default function(props) {\n    const {\n        value = '',\n        onChange = noop,\n        placeholder = ''\n    } = props;\n    return (\n        <div className={styles.container}>\n            <div className={styles.editorBox}>\n                <TextArea\n                    fill large\n                    value={value}\n                    growVertically\n                    placeholder={placeholder}\n                    onChange={evt => onChange(evt.target.value)}\n                />\n            </div>\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport {\n    Button, Classes, Switch, Drawer, Position, Icon, NavbarDivider, H5\n} from '@blueprintjs/core';\nimport styles from './logDetail.module.css';\nimport AppFrame from 'component/appFrame';\nimport logService from 'service/log';\nimport logCommentService from 'service/logComment';\nimport LogComments from 'component/logComments';\nimport { AppToaster } from 'util/toaster';\nimport MarkdownPreview from 'component/markdownPreview';\nimport { sliceCodeFromSource, replaceCodeFromSource } from 'util/sourcePosUtil';\nimport MarkdownEditor from 'component/markdownEditor';\nimport { noop } from 'util/commonUtil';\nimport NormalNavigator from 'component/normalNavigator';\n\nfunction PartialEditDrawer(props) {\n    const {\n        isOpen = false,\n        onClose = noop,\n        value = '',\n        onChange = noop,\n        onConfirm = noop\n    } = props;\n    return (\n        <Drawer\n            icon=\"annotation\"\n            autoFocus\n            hasBackdrop\n            isOpen={isOpen}\n            position={Position.BOTTOM}\n            size={Drawer.SIZE_LARGE}\n            onClose={onClose}\n            onConfirm={onConfirm}\n        >\n            <div className={Classes.DRAWER_BODY}>\n                <div style={{ backgroundColor: '#ebf1f5', height: '100%' }}>\n                    <div className={Classes.DIALOG_HEADER}>\n                        <div style={{\n                            display: 'flex',\n                            width: 640,\n                            margin: 'auto',\n                            alignItems: 'center'\n                        }}>\n                            <Icon icon=\"annotation\" />\n                            <H5>局部编辑</H5>\n                            <Button\n                                minimal\n                                icon=\"confirm\"\n                                intent=\"primary\"\n                                className={Classes.DIALOG_CLOSE_BUTTON}\n                                onClick={onConfirm}\n                            >\n                                提交\n                            </Button>\n                        </div>\n                    </div>\n                    <div className={Classes.DIALOG_BODY}>\n                        <MarkdownEditor\n                            value={value}\n                            onChange={val => onChange(val)}\n                        />\n                    </div>\n                </div>\n            </div>\n        </Drawer>\n    );\n}\n\nconst NavigationActions = props => {\n    const h = useHistory();\n    const params = useParams();\n    return (\n        < >\n            <Button icon=\"comment\" minimal onClick={() => h.push(`/log.comment.createOrEdit/${params.id}`)}>评论</Button>\n            <NavbarDivider />\n            <Button icon=\"annotation\" minimal onClick={() => h.push(`/log.createOrEdit/${params.id}`)}>修改</Button>\n            { props.children }\n            <NavbarDivider />\n            <Button icon=\"delete\" intent=\"danger\" minimal onClick={() => {\n                if (!window.confirm(\"确认删除？\")) return;\n                logService.del(params.id)\n                    .then(() => {\n                        AppToaster.show({ timeout: 2000, message: '删除成功', intent: 'success' });\n                        h.goBack();\n                    })\n                    .catch(err => {\n                        alert(err.message);\n                    });\n            }}>删除</Button>\n        </>\n    );\n};\n\nfunction LogDetail(props) {\n    const params = useParams();\n    const [flag, setFlag] = useState(false);\n    const [logData, setLogData] = useState(null);\n    const [logCommentsData, setLogCommentsData] = useState([]);\n    const [partialEdit, setPartialEdit] = useState(false);\n    const [isOpenPartialEditDrawer, setIsOpenPartialEditDrawer] = useState(false);\n    const [partialSource, setPartialSource] = useState('');\n    const [posData, setPosData] = useState(null);\n    useEffect(() => {\n        async function fetchData() {\n            const logInfo = await logService.get(params.id);\n            const logCommentsInfo = await logCommentService.all(params.id);\n            setLogData(logInfo);\n            setLogCommentsData(logCommentsInfo);\n        }\n        fetchData();\n    }, [params.id, flag]);\n    return (\n        <AppFrame\n            header={\n                <NormalNavigator\n                    showBack\n                    title=\"英雄·日志详情\"\n                    actions={\n                        <NavigationActions>\n                            <Switch style={{ marginBottom: 0, marginLeft: 5, marginRight: 5 }}\n                                label=\"局部修改\" checked={partialEdit} onChange={() => setPartialEdit(!partialEdit)}/>\n                        </NavigationActions>\n                    }\n                />\n            }\n        >\n            <div className={styles.container}>\n                {\n                    logData && <div className={styles.logContentBox}>\n                        <div className={styles.logContent}>\n                            <MarkdownPreview source={logData.content} selectAble={partialEdit} onSelect={\n                                pos => {\n                                    const partial = sliceCodeFromSource(logData.content, pos);\n                                    setIsOpenPartialEditDrawer(true);\n                                    setPartialSource(partial);\n                                    setPosData(pos);\n                                }\n                            } />\n                        </div>\n                    </div>\n                }\n\n                <div className={styles.commentBox}>\n                    <div className={styles.commentContent}>\n                        <LogComments list={logCommentsData} id={params.id} />\n                    </div>\n                </div>\n            </div>\n            <PartialEditDrawer\n                isOpen={isOpenPartialEditDrawer}\n                onClose={() => {\n                    setIsOpenPartialEditDrawer(false);\n                }}\n                onConfirm={() => {\n                    setIsOpenPartialEditDrawer(false);\n                    const source = replaceCodeFromSource(logData.content, posData, partialSource);\n                    logService\n                        .upd(logData.id, { content: source })\n                        .then(() => setFlag(!flag));\n                }}\n                value={partialSource}\n                onChange={val => setPartialSource(val)}\n            />\n        </AppFrame>\n    );\n}\n\nexport const component = LogDetail;\nexport const path = '/log.detail/:id';","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport pages from './page';\nimport 'normalize.css';\nimport '@blueprintjs/core/lib/css/blueprint.css';\nimport '@blueprintjs/icons/lib/css/blueprint-icons.css';\nimport 'github-markdown-css';\n\nfunction App() {\n    return (\n        <Router>{pages}</Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable jsx-a11y/anchor-is-valid  */\n\nimport React, { useState } from 'react';\nimport TimeAgo from 'timeago-react';\nimport { useHistory } from 'react-router-dom';\nimport { Card, Classes, Alert, Intent, Elevation } from '@blueprintjs/core';\nimport names from 'classnames';\nimport styles from './index.module.css';\nimport MarkdownPreview from 'component/markdownPreview';\nimport { AppToaster } from 'util/toaster';\nimport logService from 'service/log';\n\nexport default function (props) {\n    const h = useHistory();\n    const [ visible, setVisible ] = useState(true);\n    const [ isOpen, setIsOpen ] = useState(false);\n    return (\n        visible && <div className={styles.container}>\n            <Alert\n                cancelButtonText=\"取消\"\n                confirmButtonText=\"确定删除\"\n                icon=\"trash\"\n                intent={Intent.DANGER}\n                isOpen={isOpen}\n                onCancel={() => setIsOpen(false)}\n                onConfirm={() => {\n                    setIsOpen(false);\n                    logService.del(props.id)\n                        .then(() => {\n                            setVisible(false);\n                            AppToaster.show({ timeout: 2000, message: '删除成功', intent: 'success' });\n                        })\n                        .catch(err => {\n                            alert(err.message);\n                        });\n                }}\n            >\n                你确定将此条记录删除吗？ 删除后无法再次找回，请确认操作。\n            </Alert>\n            <div className={styles.meta}>\n                <span className={names(Classes.TEXT_MUTED, Classes.TEXT_SMALL)}>\n                    <TimeAgo datetime={props.date} locale='zh_CN' />\n                </span>\n            </div>\n            <Card elevation={Elevation.ONE} interactive onClick={() => h.push(`/log.detail/${props.id}`)}>\n                <div className={names(\"markdown-body\", styles.markdownBody)}>\n                    <MarkdownPreview source={props.children} short />\n                </div>\n            </Card>\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from '@blueprintjs/core';\nimport styles from './log.module.css';\nimport LogItem from 'component/logItem';\nimport AppFrame from 'component/appFrame';\nimport logService from 'service/log';\nimport NormalNavigator from 'component/normalNavigator';\n\n\nfunction Log() {\n    const h = useHistory();\n    const [logs, setlogs] = useState([]);\n    useEffect(() => {\n        async function fetch() {\n            const list = await logService.all();\n            setlogs(list);\n        }\n        fetch();\n    }, []);\n    return (\n        <AppFrame header={\n            <NormalNavigator title=\"英雄·日志\" actions={\n                <Button\n                    minimal intent=\"primary\" icon=\"annotation\"\n                    onClick={() => h.push('/log.createOrEdit')}\n                >创建日志</Button>\n            } />\n        }>\n            <div className={styles.container}>\n                {\n                    logs.map(message => (\n                        <LogItem\n                            key={message.id}\n                            id={message.id}\n                            date={message.time}\n                        >{message.content}</LogItem>\n                    ))\n                }\n            </div>\n        </AppFrame>\n    );\n}\n\nexport const component = Log;\nexport const path = '/log';\nexport const exact = true;","import React from 'react';\nimport { Card, TextArea } from '@blueprintjs/core';\nimport styles from './index.module.css';\nimport { noop } from 'util/commonUtil';\n\nexport default function LogCommentEditor (props) {\n    const { value = '', onChange = noop, placeholder = '' } = props;\n\n    return (\n        <div className={styles.container}>\n            <Card>\n                <TextArea\n                    fill\n                    large\n                    value={value}\n                    growVertically\n                    placeholder={placeholder}\n                    onChange={evt => onChange(evt.target.value)}\n                />\n            </Card>\n        </div>\n    );\n}","import React, { useState, useEffect} from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Button } from '@blueprintjs/core';\nimport styles from './logCommentCreate.module.css';\nimport LogCommentEditor from 'component/logCommentEditor';\nimport AppFrame from 'component/appFrame';\nimport NormalNavigation from 'component/normalNavigator';\nimport logCommentService from 'service/logComment';\n\nfunction LogCommentCreate() {\n    const params = useParams();\n    const { id = null, cid = null } = params;\n    const [ initState, setInitState ] = useState(false);\n    const [ isNew, setIsNew ] = useState(true);\n    const [ value, setValue ] = useState('');\n    const h = useHistory();\n\n    useEffect(() => {\n        (async function() {\n            if (!cid) {\n                setInitState(true);\n                return;\n            };\n            logCommentService.get(cid)\n                .then(m => {\n                    m && setValue(m.content);\n                    setIsNew(false);\n                })\n                .finally(() => {\n                    setInitState(true);\n                });\n        })();\n    }, [ cid ]);\n    return (\n        <AppFrame header={\n            <NormalNavigation showBack title=\"编辑日志评论\" actions={\n                <Button minimal icon=\"confirm\" intent=\"primary\" onClick={() => {\n                    let process;\n                    if (isNew) {\n                        process = logCommentService.add(id, {\n                            time: new Date(),\n                            content: value\n                        });\n                    } else {\n                        process = logCommentService.upd(cid, {\n                            content: value\n                        });\n                    }\n                    process.then(() => {\n                        h.goBack();\n                    }).catch(err => {\n                        alert(err.message);\n                    });\n                }}>提交</Button>\n            } />\n        }>\n            <div className={styles.container}>\n                {\n                    initState && <LogCommentEditor\n                        value={value}\n                        onChange={val => setValue(val)}\n                        placeholder=\"请从此出开始...\"\n                    />\n                }\n            </div>\n        </AppFrame>\n    );\n}\n\nexport const component = LogCommentCreate;\nexport const path = '/log.comment.createOrEdit/:id/:cid?';","import React from 'react';\nimport { Card, TextArea } from '@blueprintjs/core';\nimport styles from './index.module.css';\nimport { noop } from 'util/commonUtil';\n\nexport default function LogEditor(props) {\n    const { value = '', onChange = noop, placeholder = '' } = props;\n    return (\n        <div className={styles.container}>\n            <Card>\n                <TextArea\n                    fill\n                    large\n                    value={value}\n                    growVertically\n                    placeholder={placeholder}\n                    onChange={evt => onChange(evt.target.value)}\n                />\n            </Card>\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Button } from '@blueprintjs/core';\nimport styles from './logCreate.module.css';\nimport LogEditor from 'component/logEditor';\nimport AppFrame from 'component/appFrame';\nimport NormalNavigator from 'component/normalNavigator';\nimport store from 'store';\nimport { AppToaster } from 'util/toaster';\n\nfunction LogCreate() {\n    const h = useHistory();\n    const params = useParams();\n    const { id = null } = params;\n    const [ initState, setInitState ] = useState(false);\n    const [ isNew, setIsNew ] = useState(true);\n    const [ value, setValue ] = useState('');\n\n    useEffect(() => {\n        (async function() {\n            if (!id) {\n                setInitState(true);\n                return;\n            };\n            store.logs.get(Number(id))\n                .then(m => {\n                    m && setValue(m.content);\n                    setIsNew(false);\n                })\n                .finally(() => {\n                    setInitState(true);\n                });\n        })();\n    }, [ id ]);\n    return (\n        <AppFrame header={\n            <NormalNavigator showBack title=\"编辑日志\" actions={\n                <Button minimal intent=\"primary\" icon=\"confirm\" onClick={() => {\n                    let process;\n                    if (isNew) {\n                        process = store.logs.add({\n                            time: new Date(),\n                            content: value\n                        });\n                    } else {\n                        process = store.logs.update(Number(id), {\n                            content: value\n                        });\n                    }\n                    process.then(() => {\n                        h.goBack();\n                    }).catch(err => {\n                        AppToaster.show({ timeout: 2000, message: err.message, intent: 'error' });\n                    });\n                }}>提交</Button>\n            } />\n        }>\n            <div className={styles.container}>\n                {\n                    initState && <LogEditor\n                        value={value}\n                        onChange={val => setValue(val)}\n                        placeholder=\"请由此开始...\"\n                    />\n                }\n            </div>\n        </AppFrame>\n    );\n}\n\nexport const component = LogCreate;\nexport const path = '/log.createOrEdit/:id?';","import { Position, Toaster } from \"@blueprintjs/core\";\n \n\nexport const AppToaster = Toaster.create({\n    className: \"recipe-toaster\",\n    position: Position.TOP\n});","import React from 'react';\nimport styles from './index.module.css';\n\nexport default function(props) {\n    return (\n        <div className={styles.container}>\n            { props.header && <div className={styles.header}>{props.header}</div> }\n            <div className={styles.body}>{props.children}</div>\n            { props.footer && <div className={styles.footer}>{props.footer}</div> }\n        </div>\n    );\n}","\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n    Navbar, NavbarGroup, Button, NavbarHeading, NavbarDivider\n} from '@blueprintjs/core';\n\nexport default function NormalNavigator(props) {\n    const { showBack = false, title = '', actions = [] } = props;\n    const h = useHistory();\n    return (\n        <Navbar style={{ userSelect: 'none'}}>\n            <div style={{width: '640px', margin: 'auto'}}>\n                <NavbarGroup align=\"left\">\n                    {\n                        showBack && <>\n                            <Button\n                                onClick={() => h.goBack()}\n                                icon=\"chevron-left\"\n                                minimal\n                            >返回</Button>\n                            <NavbarDivider />\n                        </>\n                    }\n                    {\n                        title !== '' && <NavbarHeading>{title}</NavbarHeading>\n                    }\n                </NavbarGroup>\n                <NavbarGroup align=\"right\">\n                    {actions}\n                </NavbarGroup>\n            </div>\n        </Navbar>\n    );\n}","import store from 'store/index';\n\nconst get = (id) => store.logs.get(Number(id));\n\nconst add = (logInfo) => store.logs.add(logInfo);\n\nconst del = (id) => store.logs.delete(Number(id));\n\nconst upd = (id, logInfo) => store.logs.update(Number(id), logInfo);\n\nconst all = () => store.logs.orderBy('time').toArray().then(l => l.reverse());\n\nexport default {\n    get, add, del, upd, all\n}","import store from 'store/index';\n\nconst get = (id) => store.logComments.get(Number(id));\n\nconst add = (id, logCommentInfo) => store.logComments.add({...logCommentInfo, lid: id});\n\nconst del = (id) => store.logComments.delete(Number(id));\n\nconst upd = (id, logCommentInfo) => store.logComments.update(Number(id), logCommentInfo);\n\nconst all = (id) => store.logComments.where({ lid: id }).toArray();\n\nexport default {\n    get, add, del, upd, all\n}","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport names from 'classnames';\nimport styles from './index.module.css';\n\nconst SEGMENT = '---\\n';\n\nfunction findTopLevelEle(target) {\n    if (!(target instanceof HTMLElement)) return null;\n    if (!(target.parentNode instanceof HTMLElement)) return null;\n    const pnode = target.parentElement;\n    if (pnode.classList.contains(styles.markdownBody)) {\n        return target;\n    }\n    return findTopLevelEle(pnode);\n}\n\nexport default function MarkdownPreview(props) {\n    const { source = '', className, selectAble = false } = props;\n    const sepIdx = source.indexOf(SEGMENT);\n    const title = sepIdx > 0 ? source.slice(0, sepIdx) : '';\n    return (\n        <div\n            className={names(\n                \"markdown-body\",\n                className,\n                styles.markdownBody,\n                selectAble ? styles.active : ''\n            )}\n            onClick={evt => {\n                if (!props.selectAble || typeof props.onSelect !== 'function') return;\n                const el = findTopLevelEle(evt.target);\n                const sourcePosStr = el.getAttribute('data-sourcePos');\n                props.onSelect(sourcePosStr);\n            }}\n        >\n            <ReactMarkdown\n                source={props.short ? (title || source) : source}\n                sourcePos={selectAble}\n            />\n        </div>\n    );\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"logDetail_container__w0WFV\",\"logContentBox\":\"logDetail_logContentBox__2FBOS\",\"logContent\":\"logDetail_logContent__2q741\",\"commentBox\":\"logDetail_commentBox__2xmER\",\"commentContent\":\"logDetail_commentContent__2yOe-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"appFrame_container__28Uto\",\"header\":\"appFrame_header__VXnlL\",\"body\":\"appFrame_body__1wP9K\",\"footer\":\"appFrame_footer__PUQHy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"logItem_container__1HQ_G\",\"metaBlock\":\"logItem_metaBlock__19X2m\",\"meta\":\"logItem_meta__JAOjF\",\"metaItem\":\"logItem_metaItem__37psE\",\"markdownBody\":\"logItem_markdownBody__1O-pH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"markdownBody\":\"markdownPreview_markdownBody__3D-P7\"};","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nconst routes = [];\nconst pageCtx = require.context('.', false, /\\.js$/);\n\npageCtx.keys().forEach(key => {\n    if (key === './index.js') return;\n    const route = pageCtx(key);\n    routes.push(<Route {...route} key={key} />);\n});\n\nexport default routes;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"markdownEditor_container__1Bh7Q\",\"editorBox\":\"markdownEditor_editorBox__2jfkZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"log_container__1snyH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"logCommentCreate_container__3qGs1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"logCommentEditor_textarea__ltzcQ\",\"container\":\"logCommentEditor_container__3s0iH\",\"buttonWrap\":\"logCommentEditor_buttonWrap__o5tot\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"logCreate_container__19vSt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"logEditor_textarea__28vya\",\"container\":\"logEditor_container__1GeHV\",\"buttonWrap\":\"logEditor_buttonWrap__1W5No\"};"],"sourceRoot":""}